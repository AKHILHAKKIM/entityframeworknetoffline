


<!DOCTYPE html>

<html>
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=EDGE;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	Entity Relationships
</title><link href="../App_Themes/bs/bootstrap.min.css" rel="stylesheet" /><link href="../App_Themes/css/eftstyle.min.css?v=1.9" rel="stylesheet" type="text/css" />
    <!--[if lt IE 9]>
          <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <meta id="ctl00_head_metaKeyword" name="keywords" content="entity relationships, entity relationship in entity framework, ef6, how entity framework manage relationships, Entity Framework Tutorial, entity framework, what is entity framework?,Entity Relationships in entity framework, microsoft ADO.Net Entity Framework"></meta>
    <meta name="description" content="Learn how Entity Framework defines the relationship between entities in Entity Framework 6, e.g. one-to-one, one-to-many, many-to-many." /><script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://www.entityframeworktutorial.net/entityframework6/entity-relationships.aspx"
  },
  "headline": "Relationships between Entities in Entity Framework 6",
  "author": {
    "@type": "Person",
    "name": "Ravi Karia",
    "sameAs": [
      "https://www.entityframeworktutorial.net/aboutme.aspx",
      "https://www.linkedin.com/in/ravikaria"
    ]
  },
  "dateModified": "2023-11-08T09:14:48.0879372Z",
  "description": "Learn how Entity Framework defines the relationship between entities in Entity Framework 6, e.g. one-to-one, one-to-many, many-to-many."
}
</script>
    <link rel="canonical" href="https://www.entityframeworktutorial.net/entityframework6/entity-relationships.aspx" />

    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-33844821-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-33844821-1');
    </script>
    <!-- InMobi Choice. Consent Manager Tag v3.0 (for TCF 2.2) -->
<script type="text/javascript" async=true>
    (function () {
        var host = "www.themoneytizer.com";
        var element = document.createElement('script');
        var firstScript = document.getElementsByTagName('script')[0];
        var url = 'https://cmp.inmobi.com'
            .concat('/choice/', '6Fv0cGNfc_bw8', '/', host, '/choice.js?tag_version=V3');
        var uspTries = 0;
        var uspTriesLimit = 3;
        element.async = true;
        element.type = 'text/javascript';
        element.src = url;

        firstScript.parentNode.insertBefore(element, firstScript);

        function makeStub() {
            var TCF_LOCATOR_NAME = '__tcfapiLocator';
            var queue = [];
            var win = window;
            var cmpFrame;

            function addFrame() {
                var doc = win.document;
                var otherCMP = !!(win.frames[TCF_LOCATOR_NAME]);

                if (!otherCMP) {
                    if (doc.body) {
                        var iframe = doc.createElement('iframe');

                        iframe.style.cssText = 'display:none';
                        iframe.name = TCF_LOCATOR_NAME;
                        doc.body.appendChild(iframe);
                    } else {
                        setTimeout(addFrame, 5);
                    }
                }
                return !otherCMP;
            }

            function tcfAPIHandler() {
                var gdprApplies;
                var args = arguments;

                if (!args.length) {
                    return queue;
                } else if (args[0] === 'setGdprApplies') {
                    if (
                        args.length > 3 &&
                        args[2] === 2 &&
                        typeof args[3] === 'boolean'
                    ) {
                        gdprApplies = args[3];
                        if (typeof args[2] === 'function') {
                            args[2]('set', true);
                        }
                    }
                } else if (args[0] === 'ping') {
                    var retr = {
                        gdprApplies: gdprApplies,
                        cmpLoaded: false,
                        cmpStatus: 'stub'
                    };

                    if (typeof args[2] === 'function') {
                        args[2](retr);
                    }
                } else {
                    if (args[0] === 'init' && typeof args[3] === 'object') {
                        args[3] = Object.assign(args[3], { tag_version: 'V3' });
                    }
                    queue.push(args);
                }
            }

            function postMessageEventHandler(event) {
                var msgIsString = typeof event.data === 'string';
                var json = {};

                try {
                    if (msgIsString) {
                        json = JSON.parse(event.data);
                    } else {
                        json = event.data;
                    }
                } catch (ignore) { }

                var payload = json.__tcfapiCall;

                if (payload) {
                    window.__tcfapi(
                        payload.command,
                        payload.version,
                        function (retValue, success) {
                            var returnMsg = {
                                __tcfapiReturn: {
                                    returnValue: retValue,
                                    success: success,
                                    callId: payload.callId
                                }
                            };
                            if (msgIsString) {
                                returnMsg = JSON.stringify(returnMsg);
                            }
                            if (event && event.source && event.source.postMessage) {
                                event.source.postMessage(returnMsg, '*');
                            }
                        },
                        payload.parameter
                    );
                }
            }

            while (win) {
                try {
                    if (win.frames[TCF_LOCATOR_NAME]) {
                        cmpFrame = win;
                        break;
                    }
                } catch (ignore) { }

                if (win === window.top) {
                    break;
                }
                win = win.parent;
            }
            if (!cmpFrame) {
                addFrame();
                win.__tcfapi = tcfAPIHandler;
                win.addEventListener('message', postMessageEventHandler, false);
            }
        };

        makeStub();

        var uspStubFunction = function () {
            var arg = arguments;
            if (typeof window.__uspapi !== uspStubFunction) {
                setTimeout(function () {
                    if (typeof window.__uspapi !== 'undefined') {
                        window.__uspapi.apply(window.__uspapi, arg);
                    }
                }, 500);
            }
        };

        var checkIfUspIsReady = function () {
            uspTries++;
            if (window.__uspapi === uspStubFunction && uspTries < uspTriesLimit) {
                console.warn('USP is not accessible');
            } else {
                clearInterval(uspInterval);
            }
        };

        if (typeof window.__uspapi === 'undefined') {
            window.__uspapi = uspStubFunction;
            var uspInterval = setInterval(checkIfUspIsReady, 6000);
        }
    })();
</script>
<!-- End InMobi Choice. Consent Manager Tag v3.0 (for TCF 2.2) -->
</head>
<body>
    <div class="phWrapper">
        

<header class="phHeader">
    <nav class="navbar navbar-expand logo-link">
        <a class="navbar-brand text-uppercase" href="http://www.entityframeworktutorial.net">
            <img src="../images/logo.png" class="logo-img" alt="Entity Framework Tutorial" /></a>
    </nav>
</header>

        
        <nav class="navbar navbar-expand navbar-dark special-color-dark topMenuHorizontal sticky-top">

            <!-- Navbar brand -->
            <!-- Collapse button -->
            <button class="navbar-toggler d-block d-md-none" type="button" data-toggle="collapse" data-target="#navbarLeft" aria-controls="#navbarLeft"
                aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Collapsible content -->
            <div class="collapse navbar-collapse" id="topMenu">

                <!-- Links -->
                <ul class="navbar-nav mr-auto left">
                    <li class="nav-item">
                        <a href="/" class="nav-link" style="font-size: 20px">
                            <i class="fa fa-home" aria-hidden="true"></i>
                        </a>
                    </li>

                    <li class="nav-item"><a class="nav-link" href="/what-is-entityframework.aspx">EF Basics</a></li>
                    <li class="nav-item"><a class="nav-link" href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                    <li class="nav-item"><a class="nav-link" href="/code-first/what-is-code-first.aspx">EF 6 Code-First </a></li>
                    <li class="nav-item"><a class="nav-link" href="/faq.aspx">FAQs</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entity-framework-quiz.aspx">EF Quiz</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entity-framework-cheat-sheet.aspx">Cheat Sheet</a></li>
                    <li class="nav-item dropdown mega-dropdown d-lg-none d-md-block">
                <a class="nav-link dropdown-toggle no-caret" id="navbarDropdownMenuLink1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">More</a>
                <div class="dropdown-menu mega-menu v-2 row z-depth-1 special-color" aria-labelledby="navbarDropdownMenuLink1">
                    <a class="close text-white">&#10005; </a>
                    <div class="row mx-md-4 mx-1">
                        <div class="col-md-6 col-sm-6 col-xl-3 sub-menu my-xl-4 mt-4 mb-4">
                            <h6 class="sub-title text-white">Entity Framework Tutorials</h6>
                            <ul class="caret-style pl-0">
                                <li class=""><a class="menu-item" href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                                <li class=""><a class="menu-item" href="/code-first/what-is-code-first.aspx">EF 6 Code-First</a></li>
                                <li class=""><a class="menu-item" href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                            </ul>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xl-3 sub-menu my-xl-4  mt-4 ">
                            <h6 class="sub-title text-white">Entity Framework</h6>
                            <!--Featured image-->
                            <ul class="caret-style pl-0">
                                <li class=""><a class="menu-item" href="/entity-framework-quiz.aspx">EF Quiz</a></li>
                                <li class=""><a class="menu-item" href="/Articles/entityframework-articles.aspx">FAQs</a></li>
                                
                                <li class=""><a class="menu-item" href="/entity-framework-cheat-sheet.aspx">EF Cheat Sheet</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </li>
                </ul>

                <!-- Links -->
                <ul class="navbar-nav nav-flex right ml-auto">
                    
                </ul>
                <!-- Search form -->
                <div id="wrap">
                    <form class="navbar-form" action="https://www.google.com/search" id="cse-search-box" role="search" target="_blank">
                        <div>
                            <input type="hidden" name="cx" value="partner-pub-7448309248176309:8374077199" />
                            <input type="hidden" name="ie" value="UTF-8" />
                            <input type="text" name="q" id="q" placeholder="Search" class="form-control">
                            <span class="input-group-btn">
                                <button type="submit" id="search_submit" class="button-search border-0 bg-transparent text-white">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </form>

                </div>
            </div>
        </nav>

        <nav class="navbar menuLeft p-0 navbar-expand-md">
            <div class="collapse navbar-collapse" id="navbarLeft">
                <div class="menuVerticalParent">
                    <ul class="menuVertical" id="leftmenu">
                        <li><a href="/entityframework6/introduction.aspx">Introduction</a></li>
                        <li><a href="/entityframework6/create-entity-data-model.aspx">Create Entity Data Model</a></li>
                        <li><a href="/entityframework6/model-browser-in-entity-framework.aspx">Model Browser</a></li>
                        <li><a href="/entityframework6/dbcontext.aspx">DbContext Class</a></li>
                        <li><a href="/entityframework6/dbset.aspx">DbSet Entities</a></li>
                        <li><a href="/entityframework6/add-update-delete-data-in-entityframework.aspx">Add/Update/Delete Data</a></li>
                        <li><a href="/entityframework6/querying-with-entityframework.aspx">Querying</a></li>
                        <li>
                            <ul>
                                <li><a href="/entityframework6/linq-to-entities-queries-in-entity-framework.aspx">LINQ-to-Entities Queries</a></li>
                                <li><a href="/entityframework6/eager-loading-in-entity-framework.aspx">Eager Loading</a></li>
                                <li><a href="/entityframework6/lazyloading-in-entity-framework.aspx">Lazy Loading</a></li>
                                <li><a href="/entityframework6/explicit-loading-with-dbcontext.aspx">Explicit Loading</a></li>
                                <li><a href="/entityframework6/raw-sql-query-in-entity-framework.aspx">Raw SQL Query</a></li>
                            </ul>
                        </li>
                        <li><a href="/entityframework6/entity-relationships.aspx">Entity Relationships</a></li>
                        <li><a href="/entityframework6/attach-disconnected-entity-graph.aspx">Attach Disconnected Entities</a></li>
                        <li><a href="/entityframework6/save-disconnected-entity-in-entity-framework.aspx">Save Disconnected Entity</a></li>
                        <li><a href="/entityframework6/save-entity-graph.aspx">Save Disconnected Entity Graph</a></li>
                        <li><a href="/entityframework6/delete-disconnected-entity-in-entity-framework.aspx">Delete Disconnected Entity</a></li>
                        <li><a href="/entityframework6/async-query-and-save.aspx">Async Query and Save</a></li>
                        <li><a href="/entityframework6/addrange-removerange.aspx">Add\Remove Multiple Entities</a></li>
                        <li><a href="/entityframework6/handle-concurrency-in-entity-framework.aspx">Handle Concurrency</a></li>
                        <li><a href="/entityframework6/stored-procedure-in-entity-framework.aspx">Stored Procedure in EF</a></li>
                        <li><a href="/entityframework6/crud-using-stored-procedures.aspx">CUD using Stored Procedure</a></li>
                        <li><a href="/entityframework6/dbentityentry.aspx">DbEntityEntry Class</a></li>
                        <li><a href="/entityframework6/change-tracking-in-entity-framework.aspx">Change Tracking of Entities</a></li>
                        <li><a href="/entityframework6/enum-in-entity-framework.aspx">Enum </a></li>
                        <li><a href="/entityframework6/spatial-datatype-in-entity-framework.aspx">Spatial Data Type</a></li>
                        <li><a href="/entityframework6/view-in-entity-framework.aspx">DB Views in EF</a></li>
                        <li><a href="/entityframework6/table-valued-function-in-entity-framework.aspx">Table-valued Function</a></li>

                        <li><a href="/entityframework6/validate-entity-in-entity-framework.aspx">Validate Entity</a></li>

                        <li><a href="/entityframework6/code-based-configuration.aspx">Code-based configuration</a></li>
                        <li><a href="/entityframework6/database-command-logging.aspx">Db Command Logging</a></li>
                        <li><a href="/entityframework6/database-command-interception.aspx">Command Interception</a></li>
                        <li><a href="/entityframework6/transaction-in-entity-framework.aspx">Transaction support</a></li>
                        <li><a href="/entityframework6/multiple-diagrams-in-entity-framework.aspx">Multiple Diagrams</a></li>
                        <li><a href="/entityframework6/colored-entity-in-entity-framework.aspx">Colored Entities in Designer</a></li>
                        <li><a href="/entityframework6/model-first-with-entity-framework.aspx">Model-First Approach</a></li>

                    </ul>
                </div>
            </div>
        </nav>
        <section class="middleContent" id="middleContent">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-12 pr-md-0 col-lg-12 col-xl-8">
                        
<div class="lb-ad mt-1">
    
    <a href="https://entityframework-extensions.net?z=eft" target="_blank" rel="nofollow" >
        <img src="/images/ef-ext-lb.jpg" class="eftext-img" /></a>
</div>

                        
<div class="navigation ">
    <div class="row">
        <div class="col-6  text-left mb-2 mb-sm-0" id="divPrev1">
            <a id="ctl00_eftNextPrevious_lnkPrev1" class="btn  rounded-0" href="/entityframework6/raw-sql-query-in-entity-framework.aspx"><i class="fa fa-angle-left mr-1"></i> Previous</a>
        </div>
        <div class="col-6 text-right float-right" id="divNext1">
            <a id="ctl00_eftNextPrevious_lnkNext1" class="btn rounded-0" href="/entityframework6/attach-disconnected-entity-graph.aspx">Next <i class="fa fa-angle-right ml-1"></i></a>
        </div>
    </div>
</div>


                        
    <h1>Relationships between Entities in Entity Framework 6</h1>
    <p>Here, you will learn how entity framework manages the relationships between entities.</p>
    <p>
        Entity framework supports three types of relationships, same as database: 1) One-to-One 2) One-to-Many, and 3) Many-to-Many.
    </p>


    <p>We have created an Entity Data Model for the SchoolDB database in the <a href="/entityframework6/create-entity-data-model.aspx">Create Entity Data Model</a> chapter. 
        The following figure shows the visual designer for that EDM with all the entities and relationships among them.</p>

    <figure class="thumbnail center-block">
        <a href="/images/entityrelation2.png" title="Entity relationships in entity framework" target="_blank">
            <img src="/images/entityrelation2.png" alt="Entity relationships in entity framework" /></a>
    </figure>

    <p>Let's see how each relationship (association) is being managed by entity framework.</p>
    <h2>One-to-One Relationship</h2>

    <p>As you can see in the above figure, <code>Student</code> and <code>StudentAddress</code> have a One-to-One relationship (zero or one). A student can have only one or zero addresses. 
        Entity framework adds the <code>Student</code> <a href="/basics/entity-in-entityframework.aspx#reference-navigation-property" target="_blank">reference navigation property</a> into the <code>StudentAddress</code> entity and the <code>StudentAddress</code> navigation entity into the <code>Student</code> entity. 
        Also, the <code>StudentAddress</code> entity has both <code>StudentId</code> property as PrimaryKey and ForeignKey, which makes it a one-to-one relationship.</p>
<pre class="csharpcode">
<span class="kwrd">public</span> <span class="kwrd">partial</span> <span class="kwrd">class</span> <span class="userclass">Student</span>
{
    <span class="kwrd">public</span> Student()
    {
        <span class="kwrd">this</span>.Courses = <span class="kwrd">new</span> <span class="userclass">HashSet</span>&lt;<span class="userclass">Course</span>&gt;();
    }
    
    <span class="kwrd">public</span> <span class="kwrd">int</span> StudentID { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> StudentName { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> Nullable&lt;<span class="kwrd">int</span>&gt; StandardId { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">byte</span>[] RowVersion { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    
    <span class="kwrd">public</span> <span class="kwrd">virtual</span> <span class="userclass">StudentAddress</span> StudentAddress { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    }
    
<span class="kwrd">public</span> <span class="kwrd">partial</span> <span class="kwrd">class</span> <span class="userclass">StudentAddress</span>
{
    <span class="kwrd">public</span> <span class="kwrd">int</span> StudentID { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> Address1 { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> Address2 { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> City { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> State { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    
    <span class="kwrd">public</span> <span class="kwrd">virtual</span> <span class="userclass">Student</span> Student { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
}
</pre>
    <p>In the above example, the <code>StudentId</code> property needs to be PrimaryKey as well as ForeignKey. This can be configured using Fluent API in the <code>OnModelCreating</code> method of the context class. </p>
    
    <h2>One-to-Many Relationship</h2>

    <p>
        The <code>Standard</code> and <code>Teacher</code> entities have a One-to-Many relationship marked by multiplicity where 1 is for One and * is for Many. This means that <code>Standard</code> can have many Teachers whereas <code>Teacher</code> can associate with only one <code>Standard</code>. 
    </p>
    <p>To represent this, the <code>Standard</code> entity has the <a href="/entityframework6/entity-in-entityframework.aspx#collection-navigation-property" target="_blank">collection navigation property</a> <code>Teachers</code>
         (please notice that it's plural), which indicates that one <code>Standard</code> can have a collection of Teachers (many teachers).  And the <code>Teacher</code> entity has a <code>Standard</code> navigation property (reference property), 
        which indicates that <code>Teacher</code> is associated with one <code>Standard</code>. Also, it contains the <code>StandardId</code> foreign key (PK in <code>Standard</code> entity). 
        This makes it a One-to-Many relationship.</p>
    <pre class="csharpcode" >
<span class="kwrd">public</span> <span class="kwrd">partial</span> <span class="kwrd">class</span> <span class="userclass">Standard</span>
{
    <span class="kwrd">public</span> Standard()
    {
        <span class="kwrd">this</span>.Teachers = <span class="kwrd">new</span> <span class="userclass">HashSet</span>&lt;<span class="userclass">Teacher</span>&gt;();
    }
    
    <span class="kwrd">public</span> <span class="kwrd">int</span> StandardId { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> StandardName { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> Description { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    
    <span class="kwrd">public</span> <span class="kwrd">virtual</span> <span class="userclass">ICollection</span>&lt;<span class="userclass">Teacher</span>&gt; Teachers { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
}

<span class="kwrd">public</span> <span class="kwrd">partial</span> <span class="kwrd">class</span> <span class="userclass">Teacher</span>
{
    <span class="kwrd">public</span> Teacher()
    {
        <span class="kwrd">this</span>.Courses = <span class="kwrd">new</span> <span class="userclass">HashSet</span>&lt;<span class="userclass">Course</span>&gt;();
    }
    
    <span class="kwrd">public</span> <span class="kwrd">int</span> TeacherId { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> TeacherName { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">Nullable</span>&lt;<span class="kwrd">int</span>&gt; TeacherType { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    
    <span class="kwrd">public</span> <span class="kwrd">Nullable</span>&lt;<span class="kwrd">int</span>&gt; StandardId { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">virtual</span> <span class="userclass">Standard</span> Standard { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
}
</pre>
    
<div class="inart-ad">
   
    
</div>

    <h2>Many-to-Many Relationship</h2>
    <p>The <code>Student</code> and <code>Course</code> have a Many-to-Many relationship marked by * multiplicity. It means one <code>Student</code> can enroll for many Courses and also, one <code>Course</code> can be taught to many Students. </p>
    <p>The database includes the <code>StudentCourse</code> joining table which includes the primary key of both the tables 
        (<code>Student</code> and <code>Course</code> tables). Entity Framework represents many-to-many relationships by not having the entity set (<code>DbSet property</code>) for the joining table in the CSDL and visual designer. Instead it manages this through mapping. </p>
    <p>As you can see in the above figure, the <code>Student</code> entity includes the <a href="/entityframework6/what-is-entity-in-entityframework.aspx#collection-navigation-property" target="_blank">collection navigation property</a> <code>Courses</code> and <code>Course</code> entity includes the collection navigation property <code>Students</code> to represent a many-to-many relationship between them.</p>
    <p>The following code snippet shows the <code>Student</code> and <code>Course</code> entity classes.</p>
<pre class="csharpcode">
<span class="kwrd">public</span> <span class="kwrd">partial</span> <span class="kwrd">class</span> <span class="userclass">Student</span>
{
    <span class="kwrd">public</span> Student()
    {
        <span class="kwrd">this</span>.Courses = <span class="kwrd">new</span> <span class="userclass">HashSet</span>&lt;<span class="userclass">Course</span>&gt;();
    }
    
    <span class="kwrd">public</span> <span class="kwrd">int</span> StudentID { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> StudentName { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> Nullable&lt;<span class="kwrd">int</span>&gt; StandardId { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">byte</span>[] RowVersion { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    
    <span class="kwrd">public</span> <span class="kwrd">virtual</span> <span class="userclass">ICollection</span>&lt;<span class="userclass">Course</span>&gt; Courses { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
}
    
<span class="kwrd">public</span> <span class="kwrd">partial</span> <span class="kwrd">class</span> <span class="userclass">Course</span>
{
    <span class="kwrd">public</span> Course()
    {
        <span class="kwrd">this</span>.Students = <span class="kwrd">new</span> <span class="userclass">HashSet</span>&lt;<span class="userclass">Student</span>&gt;();
    }
    
    <span class="kwrd">public</span> <span class="kwrd">int</span> CourseId { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> <span class="kwrd">string</span> CourseName { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    <span class="kwrd">public</span> System.Data.Entity.Spatial.<span class="userclass">DbGeography</span> Location { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
    
    <span class="kwrd">public</span> <span class="kwrd">virtual</span> <span class="userclass">ICollection</span>&lt;<span class="userclass">Student</span>&gt; Students { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }
}
</pre>
    <p><b>Note:</b> Entity framework supports many-to-many relationships only when the joining table (<code>StudentCourse</code> in this case) does <b>NOT</b> include any columns other than PKs of both tables. 
        If the join tables contain additional columns, such as DateCreated, then the EDM creates an entity for the middle table as well and you will have to manage CRUD operations for many-to-many entities manually.</p>

    <p>Open EDM in XML view. You can see that SSDL (storage schema) has the <code>StudentCourse</code> entityset, but CSDL doesn't have it. Instead, it's being mapped in the navigation property of the <code>Student</code> and <code>Course</code> entities. 
        MSL (C-S Mapping) has mapping between <code>Student</code> and <code>Course</code> put into the <code>StudentCourse</code> table in the &lt;AssociationSetMapping/&gt; section.</p>

    <figure class="thumbnail center-block">
        <a href="/images/entityrelation3.png" title="entity framework tutorial" target="_blank">
            <img src="/images/entityrelation3.png" alt="entity relationships in entity framework" /></a>
    </figure>

    <p>
        Thus, a many-to-many relationship is being managed by C-S mapping in EDM. So, when you add a <code>Student</code> in a <code>Course</code> or a <code>Course</code> in a <code>Student</code> entity and when you save it, it will then insert the PK of the added student and course in the <code>StudentCourse</code> table. 
        So, this mapping not only enables a convenient association directly between the two entities, but also manages querying, inserts, and updates across these joins.
    </p>

   


                        <div>
                            <hr />
                            <a href="https://github.com/entityframeworktutorial/EF6-DBFirst-Demo" target="_blank"><i class="fa fa-download" aria-hidden="true"></i>&nbsp;Download EF 6 DB-First Demo Project from Github</a>
                        </div>
                        
<div class="row">
    <hr />
    
    
    <div class="col-xl-12 text-center">
       <div id="124859-19"><script src="//ads.themoneytizer.com/s/gen.js?type=19"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=19"></script></div>
    </div>

</div>

                        
<div class="navigation ">
    <div class="row">
        <div class="col-6  text-left mb-2 mb-sm-0" id="divPrev1">
            <a id="ctl00_eftNextPrevious1_lnkPrev1" class="btn  rounded-0" href="/entityframework6/raw-sql-query-in-entity-framework.aspx"><i class="fa fa-angle-left mr-1"></i> Previous</a>
        </div>
        <div class="col-6 text-right float-right" id="divNext1">
            <a id="ctl00_eftNextPrevious1_lnkNext1" class="btn rounded-0" href="/entityframework6/attach-disconnected-entity-graph.aspx">Next <i class="fa fa-angle-right ml-1"></i></a>
        </div>
    </div>
</div>

                    </div>
                    
<div class=" d-none d-xl-block col-xl-4 rightSidebar">
    <div class="row">
        <div class="col-12">
            <div class="popular-articles col-12">
                <ul class="list-group article-items one">
                    
                    <li class="list-group-item intro"><a href="https://entityframework-extensions.net/fastest-way-to-insert?z=eft-tl" onclick="_gaq.push(['_trackEvent', 'ef_ext_tl', 'click', 'LINK CLICK', 1, true]);" target="_blank" rel="nofollow  noreferrer" title="Improve EF performance using Entity Framework Extension">Fastest Way to Insert using EF Extensions</a></li>
                    <li class="list-group-item intro"><a href="https://www.tutorialsteacher.com" target="_blank" title="C#, ASP.NET MVC, LINQ, TypeScript, Node.js, TypeScirpt">Learn C#, MVC, ASP.NET Core, LINQ</a></li>

                </ul>
            </div>

            
            <div class="mt-3 ml-2">
                <div id="124859-2">
                    <script src="//ads.themoneytizer.com/s/gen.js?type=2"></script>
                    <script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=2"></script>
                </div>
            </div>
            
            
            
            
            
            <div class="mt-3 ml-2" id="stickyAdDiv">
                <div id="124859-3"><script src="//ads.themoneytizer.com/s/gen.js?type=3"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=3"></script></div>
            </div>
        </div>


    </div>
</div>

                </div>
            </div>
            
<footer class="section footer pt-5">
    <div class="footer-main">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-7">
                    <div class="row">
                        <div class="col-md-5 ">
                            <div class="edugate-widget widget">
                                <div class="title-widget">EntityFrameworkTutorial</div>
                                <div class="content-widget">
                                    <p>
                                        Learn Entity Framework using simple yet practical examples on EntityFrameworkTutorial.net for free.
                                        Learn Entity Framework DB-First, Code-First and EF Core step by step.
                                        While using this site, you agree to have read and accepted our terms
                                        of use and <a href="/privacy-policy.aspx" class="privacypolicy">privacy policy</a>.
                                    </p>
                                    <div class="info-list">
                                        <ul class="list-unstyled">
                                            <li><i class="fa fa-envelope-o"></i><a class="mail" href="/cdn-cgi/l/email-protection#77111212131516141c371219031e030e1105161a120018051c03020318051e161b59191203"><span class="__cf_email__" data-cfemail="6b0d0e0e0f090a08002b0e051f021f120d190a060e1c0419001f1e1f0419020a0745050e1f">[email&#160;protected]</span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="useful-link-widget widget">
                                <div class="title-widget">Tutorials</div>
                                <div class="content-widget">
                                    <div class="useful-link-list">
                                        <div class="row">
                                            <div class="col-md-6 col-sm-6">
                                                <ul class="list-unstyled">
                                                    <li><i class="fa fa-angle-right"></i><a href="/entityframework6/what-is-entityframework.aspx">EF Basics</a></li>
                                                    <li><i class="fa fa-angle-right"></i><a href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                                                </ul>
                                            </div>
                                            <div class="col-md-6 col-sm-6 ">
                                                <ul class="list-unstyled">
                                                    <li><i class="fa fa-angle-right"></i><a href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                                                    <li><i class="fa fa-angle-right"></i><a href="/code-first/what-is-code-first.aspx">EF 6 Code-First</a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="mailing-widget widget">
                                <div class="title-widget">E-mail list</div>
                                <div class="content-wiget">
                                    <p>
                                        Subscribe to EntityFrameworkTutorial email list and get EF 6 and EF Core Cheat Sheets, latest updates, tips &amp;
                                        tricks about Entity Framework to your inbox.
                                    </p>
                                    <form action="//entityframeworktutorial.us13.list-manage.com/subscribe/post-json?u=659e2cbd2829799e7dc94ae35&amp;id=93dae2ea03" method="post" id="subscribe-form" name="subscribe-form" class="validate" novalidate>
                                        <div class="input-group">
                                            <input type="text" placeholder="Email address" class="form-control form-email-widget" name="MERGE0" id="MERGE0" size="25" /><span class="input-group-btn"><input type="submit" value="Go" name="subscribe" id="mc-embedded-subscribe" class="btn btn-email" /></span>
                                        </div>

                                        <div id="mce-responses" class="clear">
                                            <div class="response" id="mce-error-response" style="display: none"></div>
                                            <div class="response" id="mce-success-response" style="display: none"></div>
                                        </div>
                                        <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                                        <div style="position: absolute; left: -5000px;" aria-hidden="true">
                                            <input type="text" name="b_659e2cbd2829799e7dc94ae35_93dae2ea03" tabindex="-1" value="" />
                                        </div>
                                        <div class="alert-success" id="successMsg"></div>
                                        <div class="alert-danger" id="failMsg"></div>

                                    </form>
                                    <p>We respect your privacy.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row hyperlink text-center text-md-left">
                <div class="col-md-6 hyper-left">
                    <ul class="list-inline">
                        <li class="list-inline-item"><a href="/aboutme.aspx">ABOUT ME</a></li>
                        <li class="list-inline-item"><a href="/privacy-policy.aspx">PRIVACY POLICY</a></li>
                        <li class="list-inline-item"><a href="/terms-of-use.aspx">TERMS OF USE</a></li>
                    </ul>
                </div>
                <div class="col-md-6 hyper-right text-center text-md-right">
                    <i class="fa fa-copyright" aria-hidden="true"></i> 2023 EntityFrameworkTutorial.net. All Rights Reserved.
                </div>
            </div>
        </div>
    </div>
    
</footer>
   <div id="124859-6"><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="//ads.themoneytizer.com/s/gen.js?type=6"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=6"></script></div>

        </section>
    </div>
    <script src="/scripts/jquery.min.js"></script>
    
    <script src="/scripts/popper.1.12.9.min.js"></script>
    <script src="/App_Themes/bs/bootstrap.min.js"></script>
    <script src="/scripts/eftGeneralScript.min.js?v=1.3"></script>
    <script type="text/javascript" src="//cdn.pubguru.com/fb.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            stickTLMenus();
            stickyAd();
            var temp = $(window).height();

            $('#back-top a').addClass('d-none');
            $(window).scroll(function () {
                stickTLMenus();
                stickyAd();

                if ($(window).scrollTop() > temp) {
                    $('#back-top a').addClass('d-block');
                    $('#back-top a').removeClass('d-none');
                }
                else {
                    $('#back-top a').addClass('d-none');
                    $('#back-top a').removeClass('d-block');
                }
            });
            var path = $(location).attr('pathname');
            $('#leftmenu li a[href="' + path + '"]').addClass('active');
            $('#topMenu ul li a[href="/entityframework6/introduction.aspx"]').addClass('active');

            maintainLeftMenuPos();
            $("#subscribe-form").on("submit", function (s) { s.preventDefault(), submitSubscribeForm($("#subscribe-form")) })
        });
    </script>
</body>
</html>
