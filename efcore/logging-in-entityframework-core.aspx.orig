


<!DOCTYPE html>

<html>
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=EDGE;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	Logging in Entity Framework Core
</title><link href="../App_Themes/bs/bootstrap.min.css" rel="stylesheet" /><link href="../App_Themes/css/eftstyle.min.css?v=1.9" rel="stylesheet" type="text/css" />
    

    <!--[if lt IE 9]>
          <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <meta id="ctl00_head_metaKeyword" name="keywords" content="logging, log in ef core, entity framework core logging, how to log, learn logging in efcore, ef core, efcore, entity framework core, ef core 2, log sql queries, filter logs, log category, log level "></meta>
    <meta name="description" content="Learn how to do logging in Entity Framework Core." />
<script type="application/ld+json">{"@context":"https://schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https://www.entityframeworktutorial.net/efcore/logging-in-entityframework-core.aspx"},"headline":"Logging in Entity Framework Core","author":{"@type":"Person","name":"Ravi Karia","sameAs":["https://www.entityframeworktutorial.net/aboutme.aspx","https://www.linkedin.com/in/ravikaria"]},"dateModified":"2021-06-26T15:27:49.3338257Z","description":"Learn how to do logging in Entity Framework Core."}</script>
    <link rel="canonical" href="https://www.entityframeworktutorial.net/efcore/logging-in-entityframework-core.aspx" />

    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-33844821-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-33844821-1');
    </script>
    <!-- InMobi Choice. Consent Manager Tag v3.0 (for TCF 2.2) -->
<script type="text/javascript" async=true>
    (function () {
        var host = "www.themoneytizer.com";
        var element = document.createElement('script');
        var firstScript = document.getElementsByTagName('script')[0];
        var url = 'https://cmp.inmobi.com'
            .concat('/choice/', '6Fv0cGNfc_bw8', '/', host, '/choice.js?tag_version=V3');
        var uspTries = 0;
        var uspTriesLimit = 3;
        element.async = true;
        element.type = 'text/javascript';
        element.src = url;

        firstScript.parentNode.insertBefore(element, firstScript);

        function makeStub() {
            var TCF_LOCATOR_NAME = '__tcfapiLocator';
            var queue = [];
            var win = window;
            var cmpFrame;

            function addFrame() {
                var doc = win.document;
                var otherCMP = !!(win.frames[TCF_LOCATOR_NAME]);

                if (!otherCMP) {
                    if (doc.body) {
                        var iframe = doc.createElement('iframe');

                        iframe.style.cssText = 'display:none';
                        iframe.name = TCF_LOCATOR_NAME;
                        doc.body.appendChild(iframe);
                    } else {
                        setTimeout(addFrame, 5);
                    }
                }
                return !otherCMP;
            }

            function tcfAPIHandler() {
                var gdprApplies;
                var args = arguments;

                if (!args.length) {
                    return queue;
                } else if (args[0] === 'setGdprApplies') {
                    if (
                        args.length > 3 &&
                        args[2] === 2 &&
                        typeof args[3] === 'boolean'
                    ) {
                        gdprApplies = args[3];
                        if (typeof args[2] === 'function') {
                            args[2]('set', true);
                        }
                    }
                } else if (args[0] === 'ping') {
                    var retr = {
                        gdprApplies: gdprApplies,
                        cmpLoaded: false,
                        cmpStatus: 'stub'
                    };

                    if (typeof args[2] === 'function') {
                        args[2](retr);
                    }
                } else {
                    if (args[0] === 'init' && typeof args[3] === 'object') {
                        args[3] = Object.assign(args[3], { tag_version: 'V3' });
                    }
                    queue.push(args);
                }
            }

            function postMessageEventHandler(event) {
                var msgIsString = typeof event.data === 'string';
                var json = {};

                try {
                    if (msgIsString) {
                        json = JSON.parse(event.data);
                    } else {
                        json = event.data;
                    }
                } catch (ignore) { }

                var payload = json.__tcfapiCall;

                if (payload) {
                    window.__tcfapi(
                        payload.command,
                        payload.version,
                        function (retValue, success) {
                            var returnMsg = {
                                __tcfapiReturn: {
                                    returnValue: retValue,
                                    success: success,
                                    callId: payload.callId
                                }
                            };
                            if (msgIsString) {
                                returnMsg = JSON.stringify(returnMsg);
                            }
                            if (event && event.source && event.source.postMessage) {
                                event.source.postMessage(returnMsg, '*');
                            }
                        },
                        payload.parameter
                    );
                }
            }

            while (win) {
                try {
                    if (win.frames[TCF_LOCATOR_NAME]) {
                        cmpFrame = win;
                        break;
                    }
                } catch (ignore) { }

                if (win === window.top) {
                    break;
                }
                win = win.parent;
            }
            if (!cmpFrame) {
                addFrame();
                win.__tcfapi = tcfAPIHandler;
                win.addEventListener('message', postMessageEventHandler, false);
            }
        };

        makeStub();

        var uspStubFunction = function () {
            var arg = arguments;
            if (typeof window.__uspapi !== uspStubFunction) {
                setTimeout(function () {
                    if (typeof window.__uspapi !== 'undefined') {
                        window.__uspapi.apply(window.__uspapi, arg);
                    }
                }, 500);
            }
        };

        var checkIfUspIsReady = function () {
            uspTries++;
            if (window.__uspapi === uspStubFunction && uspTries < uspTriesLimit) {
                console.warn('USP is not accessible');
            } else {
                clearInterval(uspInterval);
            }
        };

        if (typeof window.__uspapi === 'undefined') {
            window.__uspapi = uspStubFunction;
            var uspInterval = setInterval(checkIfUspIsReady, 6000);
        }
    })();
</script>
<!-- End InMobi Choice. Consent Manager Tag v3.0 (for TCF 2.2) -->
</head>
<body>

    <div class="phWrapper">
        

<header class="phHeader">
    <nav class="navbar navbar-expand logo-link">
        <a class="navbar-brand text-uppercase" href="http://www.entityframeworktutorial.net">
            <img src="../images/logo.png" class="logo-img" alt="Entity Framework Tutorial" /></a>
    </nav>
</header>

        
        <nav class="navbar navbar-expand navbar-dark special-color-dark topMenuHorizontal sticky-top">

            <!-- Navbar brand -->
            <!-- Collapse button -->
            <button class="navbar-toggler d-block d-md-none" type="button" data-toggle="collapse" data-target="#navbarLeft" aria-controls="#navbarLeft"
                aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Collapsible content -->
            <div class="collapse navbar-collapse" id="topMenu">

                <!-- Links -->
                <ul class="navbar-nav mr-auto left">
                    <li class="nav-item">
                        <a href="/" class="nav-link" style="font-size: 20px">
                            <i class="fa fa-home" aria-hidden="true"></i>
                        </a>
                    </li>

                    <li class="nav-item"><a class="nav-link" href="/what-is-entityframework.aspx">EF Basics</a></li>
                    <li class="nav-item"><a class="nav-link" href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                    <li class="nav-item"><a class="nav-link" href="/code-first/what-is-code-first.aspx">EF 6 Code-First </a></li>
                    <li class="nav-item"><a class="nav-link" href="/faq.aspx">FAQs</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entity-framework-quiz.aspx">EF Quiz</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entity-framework-cheat-sheet.aspx">Cheat Sheet</a></li>
                    <li class="nav-item dropdown mega-dropdown d-lg-none d-md-block">
                <a class="nav-link dropdown-toggle no-caret" id="navbarDropdownMenuLink1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">More</a>
                <div class="dropdown-menu mega-menu v-2 row z-depth-1 special-color" aria-labelledby="navbarDropdownMenuLink1">
                    <a class="close text-white">&#10005; </a>
                    <div class="row mx-md-4 mx-1">
                        <div class="col-md-6 col-sm-6 col-xl-3 sub-menu my-xl-4 mt-4 mb-4">
                            <h6 class="sub-title text-white">Entity Framework Tutorials</h6>
                            <ul class="caret-style pl-0">
                                <li class=""><a class="menu-item" href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                                <li class=""><a class="menu-item" href="/code-first/what-is-code-first.aspx">EF 6 Code-First</a></li>
                                <li class=""><a class="menu-item" href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                            </ul>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xl-3 sub-menu my-xl-4  mt-4 ">
                            <h6 class="sub-title text-white">Entity Framework</h6>
                            <!--Featured image-->
                            <ul class="caret-style pl-0">
                                <li class=""><a class="menu-item" href="/entity-framework-quiz.aspx">EF Quiz</a></li>
                                <li class=""><a class="menu-item" href="/Articles/entityframework-articles.aspx">FAQs</a></li>
                                
                                <li class=""><a class="menu-item" href="/entity-framework-cheat-sheet.aspx">EF Cheat Sheet</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </li>
                </ul>

                <!-- Links -->
                <ul class="navbar-nav nav-flex right ml-auto">
                    
                </ul>
                <!-- Search form -->
                <div id="wrap">
                    <form class="navbar-form" action="https://www.google.com/search" id="cse-search-box" role="search" target="_blank">
                        <div>
                            <input type="hidden" name="cx" value="partner-pub-7448309248176309:8374077199" />
                            <input type="hidden" name="ie" value="UTF-8" />
                            <input type="text" name="q" id="q" placeholder="Search" class="form-control">
                            <span class="input-group-btn">
                                <button type="submit" id="search_submit" class="button-search border-0 bg-transparent text-white">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </form>

                </div>
            </div>
        </nav>

        
        <nav class="navbar menuLeft p-0 navbar-expand-md">
            <div class="collapse navbar-collapse" id="navbarLeft">
                <div class="menuVerticalParent">
                    <ul class="menuVertical" id="leftmenu">
                        <li><a href="/efcore/entity-framework-core.aspx">EF Core - Introduction</a></li>
                        <li><a href="/efcore/install-entity-framework-core.aspx">EF Core - Installation</a></li>
                        <li><a href="/efcore/create-entities.aspx">EF Core - Create Entities</a></li>
                        <li><a href="/efcore/entity-framework-core-dbcontext.aspx">EF Core - Create DbContext</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/working-with-dbcontext.aspx">Working with DbContext</a></li>
                                <li><a href="/efcore/changetracker-in-ef-core.aspx">Track Changes of Entities</a></li>
                                <li><a href="/efcore/db-connection-strings.aspx">DB Connection Strings</a></li>
                            </ul>
                        </li>
                        <li><a href="/efcore/entity-framework-core-migration.aspx">EF Core - Migrations</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/generate-sql-script.aspx">Generate SQL Script</a></li>
                                <li><a href="/efcore/pmc-commands-for-ef-core-migration.aspx">PMC/PowerShell Commands</a></li>
                                <li><a href="/efcore/cli-commands-for-ef-core-migration.aspx">.NET Core CLI Commands</a></li>
                            </ul>
                        </li>
                        <li><a href="/efcore/saving-data-in-connected-scenario-in-ef-core.aspx">EF Core - Saving Data</a></li>
                        <li><a href="/efcore/querying-in-ef-core.aspx">EF Core - Querying</a></li>
                        <li><a href="/efcore/saving-data-in-disconnected-scenario-in-ef-core.aspx">Disconnected Scenario: Insert Data</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/update-data-in-entity-framework-core.aspx">Update Data</a></li>
                                <li><a href="/efcore/delete-data-in-entity-framework-core.aspx">Delete Data</a></li>
                            </ul>
                        </li>


                        <li><a href="/efcore/conventions-in-ef-core.aspx">EF Core - Conventions</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/one-to-many-conventions-entity-framework-core.aspx">One-to-Many Conventions</a></li>
                                <li><a href="/efcore/one-to-one-conventions-entity-framework-core.aspx">One-to-One Conventions</a></li>
                            </ul>
                        </li>
                        <li><a href="/efcore/configuration-in-entity-framework-core.aspx">EF Core - Configurations</a></li>
                        <li><a href="/efcore/fluent-api-in-entity-framework-core.aspx">EF Core - Fluent API</a>

                        </li>
                        <li>
                            <ul>
                                <li><a href="/efcore/configure-one-to-many-relationship-using-fluent-api-in-ef-core.aspx">Configure One-to-Many Relationship</a></li>
                                <li><a href="/efcore/configure-one-to-one-relationship-using-fluent-api-in-ef-core.aspx">Configure One-to-One Relationship</a></li>
                                <li><a href="/efcore/configure-many-to-many-relationship-in-ef-core.aspx">Configure Many-to-Many Relationship</a></li>

                            </ul>
                        </li>

                        <li><a href="/efcore/shadow-property.aspx">Shadow Property</a></li>
                        <li><a href="/efcore/working-with-disconnected-entity-graph-ef-core.aspx">Working with Disconnected Entity Graph</a></li>
                        <li><a href="/efcore/changetracker-trackgraph-ef-core.aspx">Tracking Entity Graph</a></li>
                        <li><a href="/efcore/raw-sql-queries-in-ef-core.aspx">Raw SQL Queries</a></li>
                        <li><a href="/efcore/working-with-stored-procedure-in-ef-core.aspx">Working with Stored Procedure</a></li>
                        <li><a href="/efcore/logging-in-entityframework-core.aspx">Logging</a></li>

                        <li><a href="/efcore/create-model-for-existing-database-in-ef-core.aspx">EF Core - Existing Database</a></li>
                    </ul>
                </div>
            </div>
        </nav>
        <section class="middleContent" id="middleContent">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-12 pr-md-0 col-lg-12 col-xl-8">
                        
<div class="lb-ad mt-1">
    
    <a href="https://entityframework-extensions.net?z=eft" target="_blank" rel="nofollow" >
        <img src="/images/ef-ext-lb.jpg" class="eftext-img" /></a>
</div>


                        
<div class="navigation ">
    <div class="row">
        <div class="col-6  text-left mb-2 mb-sm-0" id="divPrev1">
            <a id="ctl00_eftNextPrevious_lnkPrev1" class="btn  rounded-0" href="/efcore/working-with-stored-procedure-in-ef-core.aspx"><i class="fa fa-angle-left mr-1"></i> Previous</a>
        </div>
        <div class="col-6 text-right float-right" id="divNext1">
            <a id="ctl00_eftNextPrevious_lnkNext1" class="btn rounded-0" href="/efcore/create-model-for-existing-database-in-ef-core.aspx">Next <i class="fa fa-angle-right ml-1"></i></a>
        </div>
    </div>
</div>


                        
    <h1>Logging in Entity Framework Core</h1>

    <p>
        We often need to log the SQL and change tracking information for debugging purposes in EF Core.
    </p>

    <p>
        EF Core logging automatically integrates with the logging mechanisms of .NET Core.Â So, learn about <a href="https://www.tutorialsteacher.com/core/fundamentals-of-logging-in-dotnet-core" target="_blank" class="external-link">fundamentals of logging in .NET Core</a> before implimenting logging in EF Core.

    </p>
    
    <p>
        Entity Framework Core integrates with the .NET Core logging to log SQL and change tracking information to the various output targets. First, install the Nuget package for logging provider of your choice and then tie up the <code>DbContext</code> to <code>ILoggerFactory</code>.
    </p>
    <p>
        Let's install the logging provider's NuGet package. Here, we will display the logs on the console, so install the Microsoft.Extensions.Logging.Console NuGet package from the NuGet Package Manager or execute the following command in the Package Manager Console:
    </p>

    <samp>
        PM> Install-Package Microsoft.Extensions.Logging.Console
    </samp>

    <p>
        The following figure illustrates how the <code>DbContext</code> works with the logging API and console logging provider.
    </p>

    <figure class="thumbnail center-block">
        <a href="../Images/efcore/logging-in-efcore.png" target="_blank">
            <img alt="" src="../Images/efcore/logging-in-efcore.png" /></a>
    </figure>
    
    <p>
        After installing the console logger provider, you need to create a static/singleton instance of the <code>LoggerFactory</code> and then tie it with a <code>DbContext</code>, as shown below.
        
    </p>

    <pre class="csharpcode">
<span class="kwrd">public</span> <span class="kwrd">class</span> <span class="userclass">SchoolContext</span> : <span class="userclass">DbContext</span>
{
    <span class="rem">//static LoggerFactory object</span>
    <span class="kwrd">public</span> <span class="kwrd">static</span> <span class="kwrd">readonly</span> ILoggerFactory loggerFactory = <span class="kwrd">new</span> LoggerFactory(<span class="kwrd">new</span>[] {
              <span class="kwrd">new</span> <span class="userclass">ConsoleLoggerProvider</span>((_, __) =&gt; <span class="kwrd">true</span>, <span class="kwrd">true</span>)
        });

    <span class="rem">//or</span>
    <span class="rem">// public static readonly ILoggerFactory loggerFactory  = new LoggerFactory().AddConsole((_,___) =&gt; true);</span>
    
    <span class="kwrd">public</span> SchoolContext():<span class="kwrd">base</span>()
    {

    }
    
    <span class="kwrd">protected</span> <span class="kwrd">override</span> <span class="kwrd">void</span> OnConfiguring(<span class="userclass">DbContextOptionsBuilder</span> optionsBuilder)
    {
        optionsBuilder.UseLoggerFactory(loggerFactory)  <span class="rem">//tie-up DbContext with LoggerFactory object</span>
            .EnableSensitiveDataLogging()  
            .UseSqlServer(<span class="str">@"Server=.\SQLEXPRESS;Database=SchoolDB;Trusted_Connection=True;"</span>);
    }
        
    <span class="kwrd">public</span> <span class="userclass">DbSet</span>&lt;<span class="userclass">Student</span>&gt; Students { get; set; }
}
</pre>
    <p>
        In the above example, we have created an object of the <code>LoggerFactory</code> class and assigned it to the <code>ILoggerFactory</code> type static variable. Then, we passed this object in the <code>optionsBuilder.UseLoggerFactory()</code> method in the <code>OnConfiguring()</code> method. 
        This will enable the <code>DbContext</code> to share the information with the <code>loggerFactory</code> object, which in turn will display all the logging information on the console.
    </p>

    <p>
        By default, EF Core will not log sensitive data, such as filter parameter values.Â So, call the <code>EnableSensitiveDataLogging()</code> to log sensitive data.
    </p>
 <div class="card noteDiv">
        <div class="card-header">
            <span><span> <i class="fa fa-pencil-square-o"></i></span> Note:</span>
        </div>
        <div class="card-body">
            The EF team recommends using the same logger factory object with all the instances of the <code>DbContext</code> class during the application lifetime. Otherwise, it may result in a memory leak and poor performance.
            You can also create a separate factory class that provides you the singleton object of the <code>LoggerFactory</code> class to use with the <code>DbContext</code>.
            </div></div>
    <p>
        Let's understand the above example in detail.
    </p>

    <p>
        First, we created an object of the <code>LoggerFactory</code> class and assigned it to <code>ILoggerFactory</code> type static variable, as shown below.
    </p>

<pre class="csharpcode">
<span class="kwrd">public</span> <span class="kwrd">static</span> <span class="kwrd">readonly</span> <span class="userclass">ILoggerFactory</span> loggerFactory = <span class="kwrd">new</span> <span class="userclass">LoggerFactory</span>(
    <span class="kwrd">new</span>[] { <span class="kwrd">new</span> ConsoleLoggerProvider ((_, __) =&gt; <span class="kwrd">true</span>, <span class="kwrd">true</span>) }
);
</pre>

    <p>
        The <code>LoggerFactory</code> can contain one or more logging providers which can be used to log to multiple mediums concurrently. 
        The constructor of the <code>LoggerFactory</code> accept an array of different logger provider objects as <code>new[] { }</code>.
        We want to display logs on the console, so create an object of the console logger provider <code>ConsoleLoggerProvider</code>.
    </p>
    <p>
        There are four constructors of the <code>ConsoleLoggerProvider</code>. Use the one that allows lambda expression (Func<>) for log filtration and includeScope Boolean, as shown below.
    </p>

<pre class="csharpcode">
<span class="kwrd">new</span> <span class="userclass">ConsoleLoggerProvider</span>((_, __) =&gt; <span class="kwrd">true</span>, <span class="kwrd">true</span>)
</pre>
    <p>
        Here, we don't want to filter any information so the lambda expression would always return true <code>(_, __) => true</code>. 
    </p>

    <p>
        After creating an object of <code>ILoggerFactory</code>, tied-up <code>DbContext</code> with the <code>ILoggerFactory</code> in the <code>OnConfiguring()</code> method using the <code>DbContextOptionsBuilder</code>.
    </p>

<pre class="csharpcode">
optionsBuilder.UseLoggerFactory(loggerFactory)
</pre>
    <p>
        Thus, we tied-up the <code>DbContext</code> with the <code>LoggerFactory</code> which includes the console logger provider. Now, we can see all the logs on the console whenever an instance of the <code>DbContext</code> executes any action.
    </p>

    <p>
        Consider the following example.
    </p>

    <pre class="csharpcode">
<span class="kwrd">using</span> (<span class="kwrd">var</span> context = <span class="kwrd">new</span> <span class="userclass">SchoolContext</span>())
{
    <span class="kwrd">var</span> std = <span class="kwrd">new</span> <span class="userclass">Student</span>(){ StudentName = <span class="str">"Steve"</span> };
    context.Add(std);
                
    context.SaveChanges();
    Console.ReadLine();
}
</pre>
    <p>
        The above example will display the following logs on the console:
    </p>
    
<samp>
dbug: Microsoft.EntityFrameworkCore.Infrastructure[100401]                      <br />
      An 'IServiceProvider' was created for internal use by Entity Framework.   <br />
info: Microsoft.EntityFrameworkCore.Infrastructure[100403]                      <br />
      Entity Framework Core 2.0.0-rtm-26452 initialized 'SchoolContext' using pr<br />
ovider 'Microsoft.EntityFrameworkCore.SqlServer' with options: SensitiveDataLoggingEnabled                                                                      <br />
dbug: Microsoft.EntityFrameworkCore.Database.Connection[200000]                 <br />
      Opening connection to database 'SchoolDB' on server '.\SQLEXPRESS'.       <br />
                                                                                <br />
dbug: Microsoft.EntityFrameworkCore.Database.Connection[200001]                 <br />
      Opened connection to database 'SchoolDB' on server '.\SQLEXPRESS'.        <br />
dbug: Microsoft.EntityFrameworkCore.Database.Transaction[200200]                <br />
      Beginning transaction with isolation level 'ReadCommitted'.               <br />
warn: Microsoft.EntityFrameworkCore.Database.Command[100400]                    <br />
      Sensitive data logging is enabled. Log entries and exception messages may <br />
include sensitive application data, this mode should only be enabled during development.                                                                        <br />
dbug: Microsoft.EntityFrameworkCore.Database.Command[200100]                    <br />
      Executing DbCommand [Parameters=[@p0='' (DbType = DateTime2), @p1='' (DbTy<br />
pe = Int32), @p2='0', @p3='' (Size = 8000) (DbType = Binary), @p4='Steve' (Size = 4000), @p5='0'], CommandType='Text', CommandTimeout='30']                     <br />
      SET NOCOUNT ON;                                                           <br />
      INSERT INTO [Students] ([DateOfBirth], [GradeId], [Height], [Photo], [Stud<br />
entName], [Weight])                                                             <br />
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);                                    <br />
      SELECT [StudentID]                                                        <br />
      FROM [Students]                                                           <br />
      WHERE @@ROWCOUNT = 1 AND [StudentID] = scope_identity();                  <br />
info: Microsoft.EntityFrameworkCore.Database.Command[200101]                    <br />
      Executed DbCommand (68ms) [Parameters=[@p0='' (DbType = DateTime2), @p1=''<br />
 (DbType = Int32), @p2='0', @p3='' (Size = 8000) (DbType = Binary), @p4='Steve' <br />
(Size = 4000), @p5='0'], CommandType='Text', CommandTimeout='30']               <br />
      SET NOCOUNT ON;                                                           <br />
      INSERT INTO [Students] ([DateOfBirth], [GradeId], [Height], [Photo], [Stud<br />
entName], [Weight])                                                             <br />
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);                                    <br />
      SELECT [StudentID]                                                        <br />
      FROM [Students]                                                           <br />
      WHERE @@ROWCOUNT = 1 AND [StudentID] = scope_identity();                  <br />
dbug: Microsoft.EntityFrameworkCore.Database.Command[200300]                    <br />
      A data reader was disposed.                                               <br />
dbug: Microsoft.EntityFrameworkCore.Database.Transaction[200202]                <br />
      Committing transaction.                                                   <br />
dbug: Microsoft.EntityFrameworkCore.Database.Connection[200002]                 <br />
      Closing connection to database 'SchoolDB' on server '.\SQLEXPRESS'.       <br />
                                                                                <br />
dbug: Microsoft.EntityFrameworkCore.Database.Connection[200003]                 <br />
      Closed connection to database 'SchoolDB' on server '.\SQLEXPRESS'.        <br />
dbug: Microsoft.EntityFrameworkCore.Database.Transaction[200204]                <br />
      Disposing transaction.
</samp>
    <p>
        As you can see, it logs all the information.
    </p>

    
<div class="inart-ad">
   
    
</div>

    
    <h2>Filter Logs</h2>

    <p>
        In the above example, the <code>DbContext</code> logged all the information while saving an entity. 
        Sometime you don't want to log all the information and filter some unwanted logs.
        In EF Core, you can filter logs by specifying the logger category and log level. 
    </p>

    <h3>Logger Categories</h3>

    <p>
        EF Core 2.x includes the <code>DbLoggerCategory</code> class to get an Entity Framework Core logger categories using its <strong>Name</strong> property. The following table lists different logger categories.
    </p>

    <div class="table-responsive">
        <table class="table table-striped table-bordered table-condensed">
            <thead>
                <tr>
                    <th>Logger Category Class
                    </th>
                    <th>Description
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Database.Command
                    </td>
                    <td>Logger category for command execution, including SQL sent to database.
                    </td>
                </tr>
                <tr>
                    <td>Database.Connection
                    </td>
                    <td>Logger category for db connection operations.
                    </td>
                </tr>
                <tr>
                    <td>Database.Transaction
                    </td>
                    <td>Logger category for db transactions.
                    </td>
                </tr>
                <tr>
                    <td>Infrastructure
                    </td>
                    <td>Logger category for miscellaneous messages for the EF infrastructure.
                    </td>
                </tr>
                <tr>
                    <td>Migration
                    </td>
                    <td>Logger category for migrations.
                    </td>
                </tr>
                <tr>
                    <td>Model
                    </td>
                    <td>Logger category for model building and metadata.
                    </td>
                </tr>
                <tr>
                    <td>Query
                    </td>
                    <td>Logger category for queries (excluding generated SQL).
                    </td>
                </tr>
                <tr>
                    <td>Scaffolding
                    </td>
                    <td>Logger category for scaffolding and reverse engineering.
                    </td>
                </tr>
                <tr>
                    <td>Update
                    </td>
                    <td>Logger category for DbContext.SaveChanges() messages.
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    
    <h3>Log SQL Queries </h3>

    <p>
        To log only SQL queries, specify the <code>DbLoggerCategory.Database.Command</code> category and <code>LogLevel.Information</code> in the lambda expression in the constructor of the <code>ConsoleLoggerProvider</code>, as shown below.
    </p>

    <pre class="csharpcode">
<span class="kwrd">public</span> <span class="kwrd">static</span> <span class="kwrd">readonly</span> <span class="userclass">ILoggerFactory</span> consoleLoggerFactory  
            = <span class="kwrd">new</span> <span class="userclass">LoggerFactory</span>(<span class="kwrd">new</span>[] {
                  <span class="kwrd">new</span> <span class="userclass">ConsoleLoggerProvider</span>((category, level) =&gt;
                    category == <span class="userclass">DbLoggerCategory</span>.Database.Command.Name &amp;&amp;
                    level == <span class="userclass">LogLevel</span>.Information, <span class="kwrd">true</span>)
                });
</pre>
    <p>
        Or, just call the <code>AddConsole()</code> method on LoggerFactory to log SQL queries, by default.
    </p>

    <pre class="csharpcode">
<span class="kwrd">public</span> <span class="kwrd">static</span> <span class="kwrd">readonly</span> <span class="userclass">ILoggerFactory</span> consoleLoggerFactory
         = <span class="kwrd">new</span> <span class="userclass">LoggerFactory</span>().AddConsole();
</pre>
    <p>
        Now, this will log the following query information which saving an entity using the <code>DbContext</code>.
    </p>

    <samp>
info: Microsoft.EntityFrameworkCore.Database.Command[200101]                    <br />
      Executed DbCommand (73ms) [Parameters=[@p0='' (DbType = DateTime2), @p1=''<br />
 (DbType = Int32), @p2='0', @p3='' (Size = 8000) (DbType = Binary), @p4='Steve' <br />
(Size = 4000), @p5='0'], CommandType='Text', CommandTimeout='30']               <br />
      SET NOCOUNT ON;                                                           <br />
      INSERT INTO [Students] ([DateOfBirth], [GradeId], [Height], [Photo], [Stud<br />
entName], [Weight])                                                             <br />
      VALUES (@p0, @p1, @p2, @p3, @p4, @p5);                                    <br />
      SELECT [StudentID]                                                        <br />
      FROM [Students]                                                           <br />
      WHERE @@ROWCOUNT = 1 AND [StudentID] = scope_identity();
</samp>

                        
<div class="row">
    <hr />
    
    
    <div class="col-xl-12 text-center">
       <div id="124859-19"><script src="//ads.themoneytizer.com/s/gen.js?type=19"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=19"></script></div>
    </div>

</div>

                        
<div class="navigation ">
    <div class="row">
        <div class="col-6  text-left mb-2 mb-sm-0" id="divPrev1">
            <a id="ctl00_eftNextPrevious1_lnkPrev1" class="btn  rounded-0" href="/efcore/working-with-stored-procedure-in-ef-core.aspx"><i class="fa fa-angle-left mr-1"></i> Previous</a>
        </div>
        <div class="col-6 text-right float-right" id="divNext1">
            <a id="ctl00_eftNextPrevious1_lnkNext1" class="btn rounded-0" href="/efcore/create-model-for-existing-database-in-ef-core.aspx">Next <i class="fa fa-angle-right ml-1"></i></a>
        </div>
    </div>
</div>

                    </div>
                    
                    
<div class=" d-none d-xl-block col-xl-4 rightSidebar">
    <div class="row">
        <div class="col-12">
            <div class="popular-articles col-12">
                <ul class="list-group article-items one">
                    
                    <li class="list-group-item intro"><a href="https://entityframework-extensions.net/fastest-way-to-insert?z=eft-tl" onclick="_gaq.push(['_trackEvent', 'ef_ext_tl', 'click', 'LINK CLICK', 1, true]);" target="_blank" rel="nofollow  noreferrer" title="Improve EF performance using Entity Framework Extension">Fastest Way to Insert using EF Extensions</a></li>
                    <li class="list-group-item intro"><a href="https://www.tutorialsteacher.com" target="_blank" title="C#, ASP.NET MVC, LINQ, TypeScript, Node.js, TypeScirpt">Learn C#, MVC, ASP.NET Core, LINQ</a></li>

                </ul>
            </div>

            
            <div class="mt-3 ml-2">
                <div id="124859-2">
                    <script src="//ads.themoneytizer.com/s/gen.js?type=2"></script>
                    <script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=2"></script>
                </div>
            </div>
            
            
            
            
            
            <div class="mt-3 ml-2" id="stickyAdDiv">
                <div id="124859-3"><script src="//ads.themoneytizer.com/s/gen.js?type=3"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=3"></script></div>
            </div>
        </div>


    </div>
</div>

                </div>
            </div>
            
<footer class="section footer pt-5">
    <div class="footer-main">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-7">
                    <div class="row">
                        <div class="col-md-5 ">
                            <div class="edugate-widget widget">
                                <div class="title-widget">EntityFrameworkTutorial</div>
                                <div class="content-widget">
                                    <p>
                                        Learn Entity Framework using simple yet practical examples on EntityFrameworkTutorial.net for free.
                                        Learn Entity Framework DB-First, Code-First and EF Core step by step.
                                        While using this site, you agree to have read and accepted our terms
                                        of use and <a href="/privacy-policy.aspx" class="privacypolicy">privacy policy</a>.
                                    </p>
                                    <div class="info-list">
                                        <ul class="list-unstyled">
                                            <li><i class="fa fa-envelope-o"></i><a class="mail" href="/cdn-cgi/l/email-protection#75131010111714161e35101b011c010c1307141810021a071e0100011a071c14195b1b1001"><span class="__cf_email__" data-cfemail="a6c0c3c3c2c4c7c5cde6c3c8d2cfd2dfc0d4c7cbc3d1c9d4cdd2d3d2c9d4cfc7ca88c8c3d2">[email&#160;protected]</span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="useful-link-widget widget">
                                <div class="title-widget">Tutorials</div>
                                <div class="content-widget">
                                    <div class="useful-link-list">
                                        <div class="row">
                                            <div class="col-md-6 col-sm-6">
                                                <ul class="list-unstyled">
                                                    <li><i class="fa fa-angle-right"></i><a href="/entityframework6/what-is-entityframework.aspx">EF Basics</a></li>
                                                    <li><i class="fa fa-angle-right"></i><a href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                                                </ul>
                                            </div>
                                            <div class="col-md-6 col-sm-6 ">
                                                <ul class="list-unstyled">
                                                    <li><i class="fa fa-angle-right"></i><a href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                                                    <li><i class="fa fa-angle-right"></i><a href="/code-first/what-is-code-first.aspx">EF 6 Code-First</a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="mailing-widget widget">
                                <div class="title-widget">E-mail list</div>
                                <div class="content-wiget">
                                    <p>
                                        Subscribe to EntityFrameworkTutorial email list and get EF 6 and EF Core Cheat Sheets, latest updates, tips &amp;
                                        tricks about Entity Framework to your inbox.
                                    </p>
                                    <form action="//entityframeworktutorial.us13.list-manage.com/subscribe/post-json?u=659e2cbd2829799e7dc94ae35&amp;id=93dae2ea03" method="post" id="subscribe-form" name="subscribe-form" class="validate" novalidate>
                                        <div class="input-group">
                                            <input type="text" placeholder="Email address" class="form-control form-email-widget" name="MERGE0" id="MERGE0" size="25" /><span class="input-group-btn"><input type="submit" value="Go" name="subscribe" id="mc-embedded-subscribe" class="btn btn-email" /></span>
                                        </div>

                                        <div id="mce-responses" class="clear">
                                            <div class="response" id="mce-error-response" style="display: none"></div>
                                            <div class="response" id="mce-success-response" style="display: none"></div>
                                        </div>
                                        <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                                        <div style="position: absolute; left: -5000px;" aria-hidden="true">
                                            <input type="text" name="b_659e2cbd2829799e7dc94ae35_93dae2ea03" tabindex="-1" value="" />
                                        </div>
                                        <div class="alert-success" id="successMsg"></div>
                                        <div class="alert-danger" id="failMsg"></div>

                                    </form>
                                    <p>We respect your privacy.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row hyperlink text-center text-md-left">
                <div class="col-md-6 hyper-left">
                    <ul class="list-inline">
                        <li class="list-inline-item"><a href="/aboutme.aspx">ABOUT ME</a></li>
                        <li class="list-inline-item"><a href="/privacy-policy.aspx">PRIVACY POLICY</a></li>
                        <li class="list-inline-item"><a href="/terms-of-use.aspx">TERMS OF USE</a></li>
                    </ul>
                </div>
                <div class="col-md-6 hyper-right text-center text-md-right">
                    <i class="fa fa-copyright" aria-hidden="true"></i> 2023 EntityFrameworkTutorial.net. All Rights Reserved.
                </div>
            </div>
        </div>
    </div>
    
</footer>
   <div id="124859-6"><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="//ads.themoneytizer.com/s/gen.js?type=6"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=6"></script></div>

        </section>
    </div>
    <script src="/scripts/jquery.min.js"></script>
    
    <script src="/scripts/popper.1.12.9.min.js"></script>
    <script src="/App_Themes/bs/bootstrap.min.js"></script>
    <script src="/scripts/eftGeneralScript.min.js?v=1.3"></script>
    <script type="text/javascript" src="//cdn.pubguru.com/fb.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            stickTLMenus();
            stickyAd();
            var temp = $(window).height();

            $('#back-top a').addClass('d-none');
            $(window).scroll(function () {
                stickTLMenus();
                stickyAd();

                if ($(window).scrollTop() > temp) {
                    $('#back-top a').addClass('d-block');
                    $('#back-top a').removeClass('d-none');
                }
                else {
                    $('#back-top a').addClass('d-none');
                    $('#back-top a').removeClass('d-block');
                }
            });
            var path = $(location).attr('pathname');
            $('#leftmenu li a[href="' + path + '"]').addClass('active');
            $('#topMenu ul li a[href="/efcore/entity-framework-core.aspx"]').addClass('active');

            maintainLeftMenuPos();
            $("#subscribe-form").on("submit", function (s) { s.preventDefault(), submitSubscribeForm($("#subscribe-form")) })
        });
    </script>
</body>
</html>
