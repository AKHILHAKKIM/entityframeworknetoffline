


<!DOCTYPE html>

<html>
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=EDGE;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	Insert Data in Disconnected Scenario in Entity Framework Core
</title><link href="../App_Themes/bs/bootstrap.min.css" rel="stylesheet" /><link href="../App_Themes/css/eftstyle.min.css?v=1.9" rel="stylesheet" type="text/css" />
    

    <!--[if lt IE 9]>
          <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <meta id="ctl00_head_metaKeyword" name="keywords" content="save data, insert data, disconnected scenario, add data efcore, insert data ef core, save data in web app, web application, different ways to save,how to, entity framework,Entity Framework core tutorial,efcore Tutorial,ef, ef core, entity framework"></meta>
    <meta name="description" content="Learn how to add new data using Entity Framework Core in disconected scenario or web application." />
<script type="application/ld+json">{"@context":"https://schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https://www.entityframeworktutorial.net/efcore/saving-data-in-disconnected-scenario-in-ef-core.aspx"},"headline":"Insert Data in Disconnected Scenario in Entity Framework Core","author":{"@type":"Person","name":"Ravi Karia","sameAs":["https://www.entityframeworktutorial.net/aboutme.aspx","https://www.linkedin.com/in/ravikaria"]},"dateModified":"2021-06-26T15:27:49.3371697Z","description":"Learn how to add new data using Entity Framework Core in disconected scenario or web application."}</script>
    <link rel="canonical" href="https://www.entityframeworktutorial.net/efcore/saving-data-in-disconnected-scenario-in-ef-core.aspx" />

    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-33844821-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-33844821-1');
    </script>
    <!-- InMobi Choice. Consent Manager Tag v3.0 (for TCF 2.2) -->
<script type="text/javascript" async=true>
    (function () {
        var host = "www.themoneytizer.com";
        var element = document.createElement('script');
        var firstScript = document.getElementsByTagName('script')[0];
        var url = 'https://cmp.inmobi.com'
            .concat('/choice/', '6Fv0cGNfc_bw8', '/', host, '/choice.js?tag_version=V3');
        var uspTries = 0;
        var uspTriesLimit = 3;
        element.async = true;
        element.type = 'text/javascript';
        element.src = url;

        firstScript.parentNode.insertBefore(element, firstScript);

        function makeStub() {
            var TCF_LOCATOR_NAME = '__tcfapiLocator';
            var queue = [];
            var win = window;
            var cmpFrame;

            function addFrame() {
                var doc = win.document;
                var otherCMP = !!(win.frames[TCF_LOCATOR_NAME]);

                if (!otherCMP) {
                    if (doc.body) {
                        var iframe = doc.createElement('iframe');

                        iframe.style.cssText = 'display:none';
                        iframe.name = TCF_LOCATOR_NAME;
                        doc.body.appendChild(iframe);
                    } else {
                        setTimeout(addFrame, 5);
                    }
                }
                return !otherCMP;
            }

            function tcfAPIHandler() {
                var gdprApplies;
                var args = arguments;

                if (!args.length) {
                    return queue;
                } else if (args[0] === 'setGdprApplies') {
                    if (
                        args.length > 3 &&
                        args[2] === 2 &&
                        typeof args[3] === 'boolean'
                    ) {
                        gdprApplies = args[3];
                        if (typeof args[2] === 'function') {
                            args[2]('set', true);
                        }
                    }
                } else if (args[0] === 'ping') {
                    var retr = {
                        gdprApplies: gdprApplies,
                        cmpLoaded: false,
                        cmpStatus: 'stub'
                    };

                    if (typeof args[2] === 'function') {
                        args[2](retr);
                    }
                } else {
                    if (args[0] === 'init' && typeof args[3] === 'object') {
                        args[3] = Object.assign(args[3], { tag_version: 'V3' });
                    }
                    queue.push(args);
                }
            }

            function postMessageEventHandler(event) {
                var msgIsString = typeof event.data === 'string';
                var json = {};

                try {
                    if (msgIsString) {
                        json = JSON.parse(event.data);
                    } else {
                        json = event.data;
                    }
                } catch (ignore) { }

                var payload = json.__tcfapiCall;

                if (payload) {
                    window.__tcfapi(
                        payload.command,
                        payload.version,
                        function (retValue, success) {
                            var returnMsg = {
                                __tcfapiReturn: {
                                    returnValue: retValue,
                                    success: success,
                                    callId: payload.callId
                                }
                            };
                            if (msgIsString) {
                                returnMsg = JSON.stringify(returnMsg);
                            }
                            if (event && event.source && event.source.postMessage) {
                                event.source.postMessage(returnMsg, '*');
                            }
                        },
                        payload.parameter
                    );
                }
            }

            while (win) {
                try {
                    if (win.frames[TCF_LOCATOR_NAME]) {
                        cmpFrame = win;
                        break;
                    }
                } catch (ignore) { }

                if (win === window.top) {
                    break;
                }
                win = win.parent;
            }
            if (!cmpFrame) {
                addFrame();
                win.__tcfapi = tcfAPIHandler;
                win.addEventListener('message', postMessageEventHandler, false);
            }
        };

        makeStub();

        var uspStubFunction = function () {
            var arg = arguments;
            if (typeof window.__uspapi !== uspStubFunction) {
                setTimeout(function () {
                    if (typeof window.__uspapi !== 'undefined') {
                        window.__uspapi.apply(window.__uspapi, arg);
                    }
                }, 500);
            }
        };

        var checkIfUspIsReady = function () {
            uspTries++;
            if (window.__uspapi === uspStubFunction && uspTries < uspTriesLimit) {
                console.warn('USP is not accessible');
            } else {
                clearInterval(uspInterval);
            }
        };

        if (typeof window.__uspapi === 'undefined') {
            window.__uspapi = uspStubFunction;
            var uspInterval = setInterval(checkIfUspIsReady, 6000);
        }
    })();
</script>
<!-- End InMobi Choice. Consent Manager Tag v3.0 (for TCF 2.2) -->
</head>
<body>

    <div class="phWrapper">
        

<header class="phHeader">
    <nav class="navbar navbar-expand logo-link">
        <a class="navbar-brand text-uppercase" href="http://www.entityframeworktutorial.net">
            <img src="../images/logo.png" class="logo-img" alt="Entity Framework Tutorial" /></a>
    </nav>
</header>

        
        <nav class="navbar navbar-expand navbar-dark special-color-dark topMenuHorizontal sticky-top">

            <!-- Navbar brand -->
            <!-- Collapse button -->
            <button class="navbar-toggler d-block d-md-none" type="button" data-toggle="collapse" data-target="#navbarLeft" aria-controls="#navbarLeft"
                aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Collapsible content -->
            <div class="collapse navbar-collapse" id="topMenu">

                <!-- Links -->
                <ul class="navbar-nav mr-auto left">
                    <li class="nav-item">
                        <a href="/" class="nav-link" style="font-size: 20px">
                            <i class="fa fa-home" aria-hidden="true"></i>
                        </a>
                    </li>

                    <li class="nav-item"><a class="nav-link" href="/what-is-entityframework.aspx">EF Basics</a></li>
                    <li class="nav-item"><a class="nav-link" href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                    <li class="nav-item"><a class="nav-link" href="/code-first/what-is-code-first.aspx">EF 6 Code-First </a></li>
                    <li class="nav-item"><a class="nav-link" href="/faq.aspx">FAQs</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entity-framework-quiz.aspx">EF Quiz</a></li>
                    <li class="nav-item"><a class="nav-link" href="/entity-framework-cheat-sheet.aspx">Cheat Sheet</a></li>
                    <li class="nav-item dropdown mega-dropdown d-lg-none d-md-block">
                <a class="nav-link dropdown-toggle no-caret" id="navbarDropdownMenuLink1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">More</a>
                <div class="dropdown-menu mega-menu v-2 row z-depth-1 special-color" aria-labelledby="navbarDropdownMenuLink1">
                    <a class="close text-white">&#10005; </a>
                    <div class="row mx-md-4 mx-1">
                        <div class="col-md-6 col-sm-6 col-xl-3 sub-menu my-xl-4 mt-4 mb-4">
                            <h6 class="sub-title text-white">Entity Framework Tutorials</h6>
                            <ul class="caret-style pl-0">
                                <li class=""><a class="menu-item" href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                                <li class=""><a class="menu-item" href="/code-first/what-is-code-first.aspx">EF 6 Code-First</a></li>
                                <li class=""><a class="menu-item" href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                            </ul>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xl-3 sub-menu my-xl-4  mt-4 ">
                            <h6 class="sub-title text-white">Entity Framework</h6>
                            <!--Featured image-->
                            <ul class="caret-style pl-0">
                                <li class=""><a class="menu-item" href="/entity-framework-quiz.aspx">EF Quiz</a></li>
                                <li class=""><a class="menu-item" href="/Articles/entityframework-articles.aspx">FAQs</a></li>
                                
                                <li class=""><a class="menu-item" href="/entity-framework-cheat-sheet.aspx">EF Cheat Sheet</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </li>
                </ul>

                <!-- Links -->
                <ul class="navbar-nav nav-flex right ml-auto">
                    
                </ul>
                <!-- Search form -->
                <div id="wrap">
                    <form class="navbar-form" action="https://www.google.com/search" id="cse-search-box" role="search" target="_blank">
                        <div>
                            <input type="hidden" name="cx" value="partner-pub-7448309248176309:8374077199" />
                            <input type="hidden" name="ie" value="UTF-8" />
                            <input type="text" name="q" id="q" placeholder="Search" class="form-control">
                            <span class="input-group-btn">
                                <button type="submit" id="search_submit" class="button-search border-0 bg-transparent text-white">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </form>

                </div>
            </div>
        </nav>

        
        <nav class="navbar menuLeft p-0 navbar-expand-md">
            <div class="collapse navbar-collapse" id="navbarLeft">
                <div class="menuVerticalParent">
                    <ul class="menuVertical" id="leftmenu">
                        <li><a href="/efcore/entity-framework-core.aspx">EF Core - Introduction</a></li>
                        <li><a href="/efcore/install-entity-framework-core.aspx">EF Core - Installation</a></li>
                        <li><a href="/efcore/create-entities.aspx">EF Core - Create Entities</a></li>
                        <li><a href="/efcore/entity-framework-core-dbcontext.aspx">EF Core - Create DbContext</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/working-with-dbcontext.aspx">Working with DbContext</a></li>
                                <li><a href="/efcore/changetracker-in-ef-core.aspx">Track Changes of Entities</a></li>
                                <li><a href="/efcore/db-connection-strings.aspx">DB Connection Strings</a></li>
                            </ul>
                        </li>
                        <li><a href="/efcore/entity-framework-core-migration.aspx">EF Core - Migrations</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/generate-sql-script.aspx">Generate SQL Script</a></li>
                                <li><a href="/efcore/pmc-commands-for-ef-core-migration.aspx">PMC/PowerShell Commands</a></li>
                                <li><a href="/efcore/cli-commands-for-ef-core-migration.aspx">.NET Core CLI Commands</a></li>
                            </ul>
                        </li>
                        <li><a href="/efcore/saving-data-in-connected-scenario-in-ef-core.aspx">EF Core - Saving Data</a></li>
                        <li><a href="/efcore/querying-in-ef-core.aspx">EF Core - Querying</a></li>
                        <li><a href="/efcore/saving-data-in-disconnected-scenario-in-ef-core.aspx">Disconnected Scenario: Insert Data</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/update-data-in-entity-framework-core.aspx">Update Data</a></li>
                                <li><a href="/efcore/delete-data-in-entity-framework-core.aspx">Delete Data</a></li>
                            </ul>
                        </li>


                        <li><a href="/efcore/conventions-in-ef-core.aspx">EF Core - Conventions</a></li>
                        <li>
                            <ul>
                                <li><a href="/efcore/one-to-many-conventions-entity-framework-core.aspx">One-to-Many Conventions</a></li>
                                <li><a href="/efcore/one-to-one-conventions-entity-framework-core.aspx">One-to-One Conventions</a></li>
                            </ul>
                        </li>
                        <li><a href="/efcore/configuration-in-entity-framework-core.aspx">EF Core - Configurations</a></li>
                        <li><a href="/efcore/fluent-api-in-entity-framework-core.aspx">EF Core - Fluent API</a>

                        </li>
                        <li>
                            <ul>
                                <li><a href="/efcore/configure-one-to-many-relationship-using-fluent-api-in-ef-core.aspx">Configure One-to-Many Relationship</a></li>
                                <li><a href="/efcore/configure-one-to-one-relationship-using-fluent-api-in-ef-core.aspx">Configure One-to-One Relationship</a></li>
                                <li><a href="/efcore/configure-many-to-many-relationship-in-ef-core.aspx">Configure Many-to-Many Relationship</a></li>

                            </ul>
                        </li>

                        <li><a href="/efcore/shadow-property.aspx">Shadow Property</a></li>
                        <li><a href="/efcore/working-with-disconnected-entity-graph-ef-core.aspx">Working with Disconnected Entity Graph</a></li>
                        <li><a href="/efcore/changetracker-trackgraph-ef-core.aspx">Tracking Entity Graph</a></li>
                        <li><a href="/efcore/raw-sql-queries-in-ef-core.aspx">Raw SQL Queries</a></li>
                        <li><a href="/efcore/working-with-stored-procedure-in-ef-core.aspx">Working with Stored Procedure</a></li>
                        <li><a href="/efcore/logging-in-entityframework-core.aspx">Logging</a></li>

                        <li><a href="/efcore/create-model-for-existing-database-in-ef-core.aspx">EF Core - Existing Database</a></li>
                    </ul>
                </div>
            </div>
        </nav>
        <section class="middleContent" id="middleContent">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-12 pr-md-0 col-lg-12 col-xl-8">
                        
<div class="lb-ad mt-1">
    
    <a href="https://entityframework-extensions.net?z=eft" target="_blank" rel="nofollow" >
        <img src="/images/ef-ext-lb.jpg" class="eftext-img" /></a>
</div>


                        
<div class="navigation ">
    <div class="row">
        <div class="col-6  text-left mb-2 mb-sm-0" id="divPrev1">
            <a id="ctl00_eftNextPrevious_lnkPrev1" class="btn  rounded-0" href="/efcore/querying-in-ef-core.aspx"><i class="fa fa-angle-left mr-1"></i> Previous</a>
        </div>
        <div class="col-6 text-right float-right" id="divNext1">
            <a id="ctl00_eftNextPrevious_lnkNext1" class="btn rounded-0" href="/efcore/update-data-in-entity-framework-core.aspx">Next <i class="fa fa-angle-right ml-1"></i></a>
        </div>
    </div>
</div>


                        
    <h1>Insert Data in Disconnected Scenario in Entity Framework Core</h1>
    <p>You learned about how to <a href="/efcore/saving-data-in-connected-scenario-in-ef-core.aspx" target="_blank">save data in the connected scenario</a>. Here, you will learn about saving data in the disconnected scenario.</p>
    <p>
        Saving data in the disconnected scenario is a little bit different than in the connected scenario. 
        In the disconnected scenario, the <code>DbContext</code> is not aware of disconnected entities because entities were added or modified out of the scope of the current <code>DbContext</code> instance.
         So, you need to attach the disconnected entities to a context with appropriate <code>EntityState</code> in order to perform CUD (Create, Update, Delete) operations to the database.
    </p>

    <p>
        The following figure illustrates the CUD operations in disconnected scenario:
    </p>

    <figure class="thumbnail center-block">
        <a href="/images/efcore/save-data-in-disconnected-scenario.png" target="_blank">
            <img alt="" src="/images/efcore/save-data-in-disconnected-scenario.png" /></a>
    </figure>
    <p>
        As per the above figure, disconnected entities (entities which are not being tracked by the <code>DbContext</code>) need to be attached to the <code>DbContext</code> with an appropriate <code>EntityState</code>. 
        For example, Added state for new entities, Modified state for the edited entities and Deleted state for the deleted entities, which will result in an INSERT, UPDATE, or DELETE command in the database when the <code>SaveChanges()</code> method is called.
    </p>

    <p>
        The following steps must be performed in order to insert, update or delete records into the DB table using Entity Framework Core in disconnected scenario:
    </p>

    <ol>
        <li>Attach an entity to <code>DbContext</code> with an appropriate <code>EntityState</code> e.g. Added, Modified, or Deleted
        </li>
        <li>Call <code>SaveChanges()</code> method 
        </li>
    </ol>

    <p>
        The following example demonstrates inserting a new record into the database using the above steps:
    </p>

    <pre class="csharpcode">
<span class="rem">//Disconnected entity</span>
<span class="kwrd">var</span> std = <span class="kwrd">new</span> <span class="userclass">Student</span>(){ Name = <span class="str">"Bill"</span> };

<span class="kwrd">using</span> (<span class="kwrd">var</span> context = <span class="kwrd">new</span> <span class="userclass">SchoolContext</span>())
{
    <span class="rem">//1. Attach an entity to context with Added EntityState</span>
    context.Add&lt;<span class="userclass">Student</span>&gt;(std);
    
    <span class="rem">//or the followings are also valid</span>
    <span class="rem">// context.Students.Add(std);</span>
    <span class="rem">// context.Entry&lt;Student&gt;(std).State = EntityState.Added;</span>
    <span class="rem">// context.Attach&lt;Student&gt;(std);</span>
                  
    <span class="rem">//2. Calling SaveChanges to insert a new record into Students table</span>
    context.SaveChanges();
}
</pre>
    <p>
        In the example above, <code>std</code> is a disconnected instance of the <code>Student</code> entity.
        The <code>context.Add&lt;Student&gt;()</code> method attaches a <code>Student</code> entity to a context with an Added state.
        The <code>SaveChanges()</code> method builds and executes the following INSERT statement:
    </p>

    <pre class="csharpcode">
exec sp_executesql N<span class="str">'SET NOCOUNT ON;
INSERT INTO [Students] ([Name])
VALUES (@p0);
SELECT [StudentId]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [StudentId] = scope_identity();'</span>,N<span class="str">'@p0 nvarchar(4000), 
@p1 nvarchar(4000) '</span>,@p0=N<span class="str">'Bill'</span>
go
</pre>
    <p>
        EF Core provides multiple ways to add entities with Added state. In the above example, <code>context.Students.Add(std);</code>, <code>context.Entry&lt;Student&gt;(std).State = EntityState.Added;</code>
        and <code>context.Attach&lt;Student&gt;(std);</code> will result in same INSERT statement as above.
    </p>

    <p>
        Entity Framework Core provides the following <code>DbContext</code> and <code>DbSet</code> methods which attach disconnected entities with Added <code>EntityState</code>, which in turn will execute INSERT statements in the database.
    </p>

    <div class="table-responsive">
        <table class="table table-striped table-bordered table-condensed">
            <thead>
                <tr>
                    <th>
                        <strong>DbContext Methods </strong>
                    </th>
                    <th>
                        <strong>DbSet Methods</strong>
                    </th>
                    <th>
                        <strong>Description</strong>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>DbContext.Attach
                    </td>
                    <td>DbSet.Attach
                    </td>
                    <td>Attach an entity to DbContext. Set Unchanged state for an entity whose Key property has a value and Added state for an entity whose 
                        Key property is empty or the default value of data type. 
                    </td>
                </tr>
                <tr>
                    <td>DbContext.Add
                    </td>
                    <td>DbSet.Add
                    </td>
                    <td>Attach an entity to DbContext with Added state.
                    </td>
                </tr>
                <tr>
                    <td>DbContext.AddRange
                    </td>
                    <td>DbSet.AddRange
                    </td>
                    <td>Attach a collection of entities to DbContext with Added state.
                    </td>
                </tr>
                <tr>
                    <td>DbContext.Entry
                    </td>
                    <td>-
                    </td>
                    <td>Gets an <code>EntityEntry</code> for the specified entity which provides access to change tracking information and operations.</td>
                </tr>
                <tr>
                    <td>DbContext.AddAsync
                    </td>
                    <td>DbSet.AddAsync</td>
                    <td>Asynchronous method for attaching an entity to DbContext with Added state and start tracking it if not. Data will be inserted into the database when SaveChangesAsync() is called.
                    </td>
                </tr>
                <tr>
                    <td>DbContext.AddRangeAsync
                    </td>
                    <td>DbSet.AddRangeAsync</td>
                    <td>Asynchronous method for attaching multiple entities to DbContext with Added state in one go and start tracking them if not. Data will be inserted into the database when SaveChangesAsync() is called.
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <p>
        <b>Note:</b> The above <code>DbContext</code> methods are introduced in EF Core (they were not available in EF 6 or prior). 
        Both <code>DbContext</code> and <code>DbSet</code> methods perform the same operation. Which one you use depends on your coding pattern and preference.
    </p>
    
<div class="inart-ad">
   
    
</div>


    <h2>Insert Relational Data</h2>

    <p>
        In the previous chapter, we learned to create one-to-one, one-to-many and many-to-many relationships between two entities. Entity Framework API inserts all the relational data contained in related entities. 
        
    </p>
    <p>
        Use the <code>DbContext.Add</code> or <code>DbSet.Add</code> method to add related entities to the database. 
        The <code>Add</code> method attaches entities to a context and sets the Added state to all the entities in an entity graph whose Id (Key) properties are empty, null or the default value of data type.
        Consider the following example.
    </p>
    
    <pre class="csharpcode">
<span class="kwrd">var</span> stdAddress = <span class="kwrd">new</span> <span class="userclass">StudentAddress</span>()
{
    City = <span class="str">"SFO"</span>,
    State = <span class="str">"CA"</span>,
    Country = <span class="str">"USA"</span>
};

<span class="kwrd">var</span> std = <span class="kwrd">new</span> <span class="userclass">Student</span>()
{
    Name = <span class="str">"Steve"</span>,
    Address = stdAddress
};
<span class="kwrd">using</span> (<span class="kwrd">var</span> context = <span class="kwrd">new</span> <span class="userclass">SchoolContext</span>())
{
    <span class="rem">// Attach an entity to DbContext with Added state</span>
    context.Add&lt;<span class="userclass">Student</span>&gt;(std);

    <span class="rem">// Calling SaveChanges to insert a new record into Students table</span>
    context.SaveChanges();
}
</pre>
    <p>
        In the example above, <code>context.Add&lt;Student&gt;(std)</code> adds an instance of <code>Student</code> entity. 
        EF Core API reaches the <code>StudentAddress</code> instance through the reference navigation property of <code>Student</code> and marks <code>EntityState</code> of both the entities to Added, 
        which will build and execute the following two INSERT commands on <code>SaveChanges()</code>.
    </p>

    <pre class="csharpcode">
exec sp_executesql N<span class="str">'SET NOCOUNT ON;
INSERT INTO [Students] ([Name])
VALUES (@p0);
SELECT [StudentId]
FROM [Students]
WHERE @@ROWCOUNT = 1 AND [StudentId] = scope_identity();'</span>,N<span class="str">'@p0 nvarchar(4000), 
@p1 nvarchar(4000) '</span>,@p0=N<span class="str">'Steve'</span>
go

exec sp_executesql N<span class="str">'SET NOCOUNT ON;
INSERT INTO [StudentAddresses] ([Address], [City], [Country], [State], [StudentId])
VALUES (@p5, @p6, @p7, @p8, @p9);
SELECT [StudentAddressId]
FROM [StudentAddresses]
WHERE @@ROWCOUNT = 1 AND [StudentAddressId] = scope_identity();
'</span>,N<span class="str">'@p5 nvarchar(4000),@p6 nvarchar(4000),@p7 nvarchar(4000),@p8 nvarchar(4000),
@p9 int'</span>,@p5=NULL,@p6=N<span class="str">'SFO'</span>,@p7=N<span class="str">'USA'</span>,@p8=N<span class="str">'CA'</span>,@p9=1
Go
</pre>
    <h2>Insert Multiple Records</h2>

    <p>
        Use the <code>DbContext.AddRange</code> or <code>DbSet.AddRange</code> method to add multiple entities in one go. 
        You don't need to call <code>DbContext.Add</code> method multiple times.
    </p>


    <div class="table-responsive">
        <table class="table table-striped table-bordered table-condensed">
            <thead>
                <tr>
                    <th>AddRange Methods
                    </th>
                    <th>Description
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>void AddRange(IEnumerable&lt;Object&gt; entities)</code>
                    </td>
                    <td>Adds a list of same or different types of entities to the DbContext with Added state.
                    </td>
                </tr>
                <tr>
                    <td><code>void AddRange(param object[] entities)</code>
                    </td>
                    <td>Adds an array of same or different types of entities to the DbContext with Added state.
                    </td>
                </tr>
                <tr>
                    <td><code>void AddRangeAsync(IEnumerable&lt;Object&gt;, CancellationToken)</code>
                    </td>
                    <td>Asynchronous method to add a list of same or different types of entities to the DbContext with Added state.
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <p>
        The following example demonstrates adding a list of <code>Student</code> entity objects using AddRange.
    </p>

<pre class="csharpcode">
<span class="kwrd">var</span> studentList = <span class="kwrd">new</span> List&lt;<span class="userclass">Student</span>&gt;() {
    <span class="kwrd">new</span> <span class="userclass">Student</span>(){ Name = <span class="str">"Bill"</span> },
    <span class="kwrd">new</span> <span class="userclass">Student</span>(){ Name = <span class="str">"Steve"</span> }
};

<span class="kwrd">using</span> (<span class="kwrd">var</span> context = <span class="kwrd">new</span> <span class="userclass">SchoolContext</span>())
{
    context.AddRange(studentList);
    context.SaveChanges();
}
</pre>
    <p>
        The above example will insert two new records in the <code>Students</code> table.
    </p>

    <p>
        You can also add a list of different types of entities, as shown below.
    </p>

    <pre class="csharpcode">
<span class="kwrd">var</span> std1 = <span class="kwrd">new</span> <span class="userclass">Student</span>(){ Name = <span class="str">"Bill"</span> };

<span class="kwrd">var</span> std2 = <span class="kwrd">new</span> <span class="userclass">Student</span>(){ Name = <span class="str">"Steve"</span> };

<span class="kwrd">var</span> computer = <span class="kwrd">new</span> Course() { CourseName = <span class="str">"Computer Science"</span> };

<span class="kwrd">var</span> entityList = <span class="kwrd">new</span> List&lt;Object&gt;() {
    std1,
    std2,
    computer
};

<span class="kwrd">using</span> (<span class="kwrd">var</span> context = <span class="kwrd">new</span> <span class="userclass">SchoolContext</span>())
{                
    context.AddRange(entityList);

    <span class="rem">// or </span>
    <span class="rem">// context.AddRange(std1, std2, computer);</span>

    context.SaveChanges();
}
</pre>
    <p>
        In the above example, entityList is a type of <code>List&lt;Object&gt;</code>. So, it can contain any type of entities. 
        The <code>AddRange()</code> method adds all the specified entities to a context and <code>SaveChanges()</code> will build and execute INSERT statements for all in one go.
    </p>
    <p>EF Core improves the performance by executing INSERT statements for all the above entities in a <b>single database round trip</b>. The above example will execute the following statements in the database.</p>
<pre class="csharpcode">
exec sp_executesql N'SET NOCOUNT ON;
INSERT INTO [Courses] ([CourseName], [Description])
VALUES (@p0, @p1);
SELECT [CourseId]
FROM [Courses]
WHERE @@ROWCOUNT = 1 AND [CourseId] = scope_identity();

DECLARE @inserted1 TABLE ([StudentId] int, [_Position] [int]);
MERGE [Students] USING (
VALUES (@p2, 0),
(@p3, 1)) AS i ([Name], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Name])
VALUES (i.[Name])
OUTPUT INSERTED.[StudentId], i._Position
INTO @inserted1;

SELECT [t].[StudentId] FROM [Students] t
INNER JOIN @inserted1 i ON ([t].[StudentId] = [i].[StudentId])
ORDER BY [i].[_Position];
',N'@p0 nvarchar(4000),@p1 nvarchar(4000),@p2 nvarchar(4000),@p3 nvarchar(4000)',
@p0=N'Computer Science',@p1=NULL,@p2=N'Steve',@p3=N'Bill'
go
</pre>

    <h2>Insert Data Using DbSet</h2>

    <p>
        As mentioned before, you can use <a href="https://docs.microsoft.com/en-us/ef/core/api/microsoft.entityframeworkcore.dbset-1" target="_blank">DbSet</a> to save an instance of an entity which will be translated into INSERT/UPDATE/DELETE command in the database, in the same way as EF 6.x.
    </p>

    <p>
        Use the <code>DbSet&lt;TEntity&gt;.Add()</code> method to attach an entity with Added state or the <code>DbSet&lt;TEntity&gt;.AddRange()</code> method to attach a collection of entities with Added state, as shown below.
    </p>

    <pre class="csharpcode">
<span class="kwrd">var</span> std = <span class="kwrd">new</span> <span class="userclass">Student</span>()
{
    Name = <span class="str">"Bill"</span>
};

<span class="kwrd">using</span> (<span class="kwrd">var</span> context = <span class="kwrd">new</span> <span class="userclass">SchoolContext</span>())
{
    context.Students.Add(std);

    <span class="rem">// or</span>
    <span class="rem">// context.Students.Attach(std);</span>

    context.SaveChanges();
}
</pre>
    <p>
        In the above example, the type of <code>context.Students</code> is <code>DbSet&lt;Student&gt;</code> type. 
        So, we can add the <code>Student</code> entity only. The <code>context.Students.Add(std)</code> attaches the <code>Student</code> entity to the context with the Added state, which will result in the INSERT statement when the <code>SaveChanges()</code> method is called.
    </p>

    <p>Learn how to update disconnected entities in the next chapter.</p>



                        
<div class="row">
    <hr />
    
    
    <div class="col-xl-12 text-center">
       <div id="124859-19"><script src="//ads.themoneytizer.com/s/gen.js?type=19"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=19"></script></div>
    </div>

</div>

                        
<div class="navigation ">
    <div class="row">
        <div class="col-6  text-left mb-2 mb-sm-0" id="divPrev1">
            <a id="ctl00_eftNextPrevious1_lnkPrev1" class="btn  rounded-0" href="/efcore/querying-in-ef-core.aspx"><i class="fa fa-angle-left mr-1"></i> Previous</a>
        </div>
        <div class="col-6 text-right float-right" id="divNext1">
            <a id="ctl00_eftNextPrevious1_lnkNext1" class="btn rounded-0" href="/efcore/update-data-in-entity-framework-core.aspx">Next <i class="fa fa-angle-right ml-1"></i></a>
        </div>
    </div>
</div>

                    </div>
                    
                    
<div class=" d-none d-xl-block col-xl-4 rightSidebar">
    <div class="row">
        <div class="col-12">
            <div class="popular-articles col-12">
                <ul class="list-group article-items one">
                    
                    <li class="list-group-item intro"><a href="https://entityframework-extensions.net/fastest-way-to-insert?z=eft-tl" onclick="_gaq.push(['_trackEvent', 'ef_ext_tl', 'click', 'LINK CLICK', 1, true]);" target="_blank" rel="nofollow  noreferrer" title="Improve EF performance using Entity Framework Extension">Fastest Way to Insert using EF Extensions</a></li>
                    <li class="list-group-item intro"><a href="https://www.tutorialsteacher.com" target="_blank" title="C#, ASP.NET MVC, LINQ, TypeScript, Node.js, TypeScirpt">Learn C#, MVC, ASP.NET Core, LINQ</a></li>

                </ul>
            </div>

            
            <div class="mt-3 ml-2">
                <div id="124859-2">
                    <script src="//ads.themoneytizer.com/s/gen.js?type=2"></script>
                    <script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=2"></script>
                </div>
            </div>
            
            
            
            
            
            <div class="mt-3 ml-2" id="stickyAdDiv">
                <div id="124859-3"><script src="//ads.themoneytizer.com/s/gen.js?type=3"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=3"></script></div>
            </div>
        </div>


    </div>
</div>

                </div>
            </div>
            
<footer class="section footer pt-5">
    <div class="footer-main">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-7">
                    <div class="row">
                        <div class="col-md-5 ">
                            <div class="edugate-widget widget">
                                <div class="title-widget">EntityFrameworkTutorial</div>
                                <div class="content-widget">
                                    <p>
                                        Learn Entity Framework using simple yet practical examples on EntityFrameworkTutorial.net for free.
                                        Learn Entity Framework DB-First, Code-First and EF Core step by step.
                                        While using this site, you agree to have read and accepted our terms
                                        of use and <a href="/privacy-policy.aspx" class="privacypolicy">privacy policy</a>.
                                    </p>
                                    <div class="info-list">
                                        <ul class="list-unstyled">
                                            <li><i class="fa fa-envelope-o"></i><a class="mail" href="/cdn-cgi/l/email-protection#60060505040201030b20050e140914190612010d05170f120b1415140f1209010c4e0e0514"><span class="__cf_email__" data-cfemail="7e181b1b1a1c1f1d153e1b100a170a07180c1f131b09110c150a0b0a110c171f1250101b0a">[email&#160;protected]</span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="useful-link-widget widget">
                                <div class="title-widget">Tutorials</div>
                                <div class="content-widget">
                                    <div class="useful-link-list">
                                        <div class="row">
                                            <div class="col-md-6 col-sm-6">
                                                <ul class="list-unstyled">
                                                    <li><i class="fa fa-angle-right"></i><a href="/entityframework6/what-is-entityframework.aspx">EF Basics</a></li>
                                                    <li><i class="fa fa-angle-right"></i><a href="/efcore/entity-framework-core.aspx">EF Core</a></li>
                                                </ul>
                                            </div>
                                            <div class="col-md-6 col-sm-6 ">
                                                <ul class="list-unstyled">
                                                    <li><i class="fa fa-angle-right"></i><a href="/entityframework6/introduction.aspx">EF 6 DB-First</a></li>
                                                    <li><i class="fa fa-angle-right"></i><a href="/code-first/what-is-code-first.aspx">EF 6 Code-First</a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="mailing-widget widget">
                                <div class="title-widget">E-mail list</div>
                                <div class="content-wiget">
                                    <p>
                                        Subscribe to EntityFrameworkTutorial email list and get EF 6 and EF Core Cheat Sheets, latest updates, tips &amp;
                                        tricks about Entity Framework to your inbox.
                                    </p>
                                    <form action="//entityframeworktutorial.us13.list-manage.com/subscribe/post-json?u=659e2cbd2829799e7dc94ae35&amp;id=93dae2ea03" method="post" id="subscribe-form" name="subscribe-form" class="validate" novalidate>
                                        <div class="input-group">
                                            <input type="text" placeholder="Email address" class="form-control form-email-widget" name="MERGE0" id="MERGE0" size="25" /><span class="input-group-btn"><input type="submit" value="Go" name="subscribe" id="mc-embedded-subscribe" class="btn btn-email" /></span>
                                        </div>

                                        <div id="mce-responses" class="clear">
                                            <div class="response" id="mce-error-response" style="display: none"></div>
                                            <div class="response" id="mce-success-response" style="display: none"></div>
                                        </div>
                                        <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                                        <div style="position: absolute; left: -5000px;" aria-hidden="true">
                                            <input type="text" name="b_659e2cbd2829799e7dc94ae35_93dae2ea03" tabindex="-1" value="" />
                                        </div>
                                        <div class="alert-success" id="successMsg"></div>
                                        <div class="alert-danger" id="failMsg"></div>

                                    </form>
                                    <p>We respect your privacy.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row hyperlink text-center text-md-left">
                <div class="col-md-6 hyper-left">
                    <ul class="list-inline">
                        <li class="list-inline-item"><a href="/aboutme.aspx">ABOUT ME</a></li>
                        <li class="list-inline-item"><a href="/privacy-policy.aspx">PRIVACY POLICY</a></li>
                        <li class="list-inline-item"><a href="/terms-of-use.aspx">TERMS OF USE</a></li>
                    </ul>
                </div>
                <div class="col-md-6 hyper-right text-center text-md-right">
                    <i class="fa fa-copyright" aria-hidden="true"></i> 2023 EntityFrameworkTutorial.net. All Rights Reserved.
                </div>
            </div>
        </div>
    </div>
    
</footer>
   <div id="124859-6"><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="//ads.themoneytizer.com/s/gen.js?type=6"></script><script src="//ads.themoneytizer.com/s/requestform.js?siteId=124859&formatId=6"></script></div>

        </section>
    </div>
    <script src="/scripts/jquery.min.js"></script>
    
    <script src="/scripts/popper.1.12.9.min.js"></script>
    <script src="/App_Themes/bs/bootstrap.min.js"></script>
    <script src="/scripts/eftGeneralScript.min.js?v=1.3"></script>
    <script type="text/javascript" src="//cdn.pubguru.com/fb.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            stickTLMenus();
            stickyAd();
            var temp = $(window).height();

            $('#back-top a').addClass('d-none');
            $(window).scroll(function () {
                stickTLMenus();
                stickyAd();

                if ($(window).scrollTop() > temp) {
                    $('#back-top a').addClass('d-block');
                    $('#back-top a').removeClass('d-none');
                }
                else {
                    $('#back-top a').addClass('d-none');
                    $('#back-top a').removeClass('d-block');
                }
            });
            var path = $(location).attr('pathname');
            $('#leftmenu li a[href="' + path + '"]').addClass('active');
            $('#topMenu ul li a[href="/efcore/entity-framework-core.aspx"]').addClass('active');

            maintainLeftMenuPos();
            $("#subscribe-form").on("submit", function (s) { s.preventDefault(), submitSubscribeForm($("#subscribe-form")) })
        });
    </script>
</body>
</html>
